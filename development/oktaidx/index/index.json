{
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Classes",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/==(_:_:)",
                "title" : "static func == (Credential, Credential) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/init(token:)",
                "title" : "convenience init(token: Token)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/init(token:oauth2:)",
                "title" : "convenience init(token: Token, oauth2: OAuth2Client) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/automaticrefresh",
                "title" : "var automaticRefresh: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/id",
                "title" : "var id: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/oauth2",
                "title" : "let oauth2: OAuth2Client",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/tags",
                "title" : "var tags: [String : String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/token",
                "title" : "var token: Token",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/userinfo",
                "title" : "var userInfo: UserInfo?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/authorize(_:)",
                "title" : "func authorize(inout URLRequest) async",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/authorize(request:)",
                "title" : "func authorize(request: inout URLRequest)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/introspect(_:completion:)",
                "title" : "func introspect(Token.Kind, completion: (Result<TokenInfo, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/oauth(client:didrefresh:replacedwith:)",
                "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/refresh()",
                "title" : "func refresh() async throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/refresh(completion:)",
                "title" : "func refresh(completion: (Result<Void, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/refreshifneeded(graceinterval:)",
                "title" : "func refreshIfNeeded(graceInterval: TimeInterval) async throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/refreshifneeded(graceinterval:completion:)",
                "title" : "func refreshIfNeeded(graceInterval: TimeInterval, completion: (Result<Void, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/remove()",
                "title" : "func remove() throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/revoke(type:)",
                "title" : "func revoke(type: Token.RevokeType) async throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/revoke(type:completion:)",
                "title" : "func revoke(type: Token.RevokeType, completion: ((Result<Void, OAuth2Error>) -> Void)?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/settags(_:)",
                "title" : "func setTags([String : String]) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/userinfo()",
                "title" : "func userInfo() async throws -> UserInfo",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/userinfo(completion:)",
                "title" : "func userInfo(completion: (Result<UserInfo, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/allids",
                "title" : "static var allIDs: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/credentialdatasource",
                "title" : "static var credentialDataSource: CredentialDataSource",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/default",
                "title" : "static var `default`: Credential?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/refreshgraceinterval",
                "title" : "static var refreshGraceInterval: TimeInterval",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/tokenstorage",
                "title" : "static var tokenStorage: TokenStorage",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/find(where:prompt:authenticationcontext:)",
                "title" : "static func find(where: (Token.Metadata) -> Bool, prompt: String?, authenticationContext: TokenAuthenticationContext?) throws -> [Credential]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/store(_:tags:security:)",
                "title" : "static func store(Token, tags: [String : String], security: [Credential.Security]) throws -> Credential",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credential\/with(id:prompt:authenticationcontext:)",
                "title" : "static func with(id: String, prompt: String?, authenticationContext: TokenAuthenticationContext?) throws -> Credential?",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/accesscontrol(_:)",
                    "title" : "case accessControl(SecAccessControlCreateFlags)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/accesscontrolref(_:)",
                    "title" : "case accessControlRef(SecAccessControl)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/accessgroup(_:)",
                    "title" : "case accessGroup(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/accessibility(_:)",
                    "title" : "case accessibility(Keychain.Accessibility)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/context(_:)",
                    "title" : "case context(LAContext)",
                    "type" : "case"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/security\/standard",
                    "title" : "static var standard: [Credential.Security]",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credential\/security",
                "title" : "Credential.Security",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/api(client:didsend:received:)",
                    "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/api(client:didsend:received:requestid:ratelimit:)",
                    "title" : "func api(client: APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/api(client:shouldretry:)",
                    "title" : "func api(client: APIClient, shouldRetry: URLRequest) -> APIRetry",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/api(client:willsend:)",
                    "title" : "func api(client: APIClient, willSend: inout URLRequest)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credential\/apiclientdelegate-implementations",
                "title" : "APIClientDelegate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credential\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credential\/oauth(client:willrefresh:)",
                    "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credential\/oauth2clientdelegate-implementations",
                "title" : "OAuth2ClientDelegate Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/credential",
            "title" : "Credential",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/delegatecollection\/init()",
                "title" : "init()",
                "type" : "init"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/delegatecollection\/add(_:)",
                "title" : "func add(D)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/delegatecollection\/call(_:)",
                "title" : "func call<T>((D) -> T) -> [T]",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/delegatecollection\/invoke(_:)",
                "title" : "func invoke((D) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/delegatecollection\/remove(_:)",
                "title" : "func remove(D)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/delegatecollection",
            "title" : "DelegateCollection",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/==(_:_:)",
                    "title" : "static func == (OAuth2Client.Configuration, OAuth2Client.Configuration) -> Bool",
                    "type" : "op"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/init(baseurl:discoveryurl:clientid:scopes:authentication:)",
                    "title" : "init(baseURL: URL, discoveryURL: URL?, clientId: String, scopes: String, authentication: OAuth2Client.ClientAuthentication)",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/init(domain:clientid:scopes:authentication:)",
                    "title" : "convenience init(domain: String, clientId: String, scopes: String, authentication: OAuth2Client.ClientAuthentication) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/authentication",
                    "title" : "let authentication: OAuth2Client.ClientAuthentication",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/baseurl",
                    "title" : "let baseURL: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/clientid",
                    "title" : "let clientId: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/discoveryurl",
                    "title" : "let discoveryURL: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/scopes",
                    "title" : "let scopes: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.class",
                "title" : "OAuth2Client.Configuration",
                "type" : "class"
              },
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/init()",
                    "title" : "init() throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/init(plist:)",
                    "title" : "init(plist: URL) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/additionalparameters",
                    "title" : "let additionalParameters: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/clientid",
                    "title" : "let clientId: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/issuer",
                    "title" : "let issuer: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/logoutredirecturi",
                    "title" : "let logoutRedirectUri: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/redirecturi",
                    "title" : "let redirectUri: URL?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration\/scopes",
                    "title" : "let scopes: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfiguration",
                "title" : "OAuth2Client.PropertyListConfiguration",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/init(_:session:)",
                "title" : "init(OAuth2Client.Configuration, session: URLSessionProtocol?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/init(baseurl:clientid:scopes:authentication:session:)",
                "title" : "convenience init(baseURL: URL, clientId: String, scopes: String, authentication: OAuth2Client.ClientAuthentication, session: URLSessionProtocol?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/init(domain:clientid:scopes:authentication:session:)",
                "title" : "convenience init(domain: String, clientId: String, scopes: String, authentication: OAuth2Client.ClientAuthentication, session: URLSessionProtocol?) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/additionalhttpheaders-7l5g8",
                "title" : "var additionalHttpHeaders: [String : String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/configuration-swift.property",
                "title" : "let configuration: OAuth2Client.Configuration",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/jwks",
                "title" : "var jwks: JWKS?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/openidconfiguration",
                "title" : "var openIdConfiguration: OpenIdConfiguration?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/session",
                "title" : "let session: URLSessionProtocol",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/exchange(token:completion:)",
                "title" : "func exchange<T>(token: T, completion: (Result<APIResponse<Token>, APIClientError>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/interactioncodeflow(redirecturi:additionalparameters:)",
                "title" : "func interactionCodeFlow(redirectUri: URL, additionalParameters: [String : String]?) -> InteractionCodeFlow",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/introspect(token:type:completion:)",
                "title" : "func introspect(token: Token, type: Token.Kind, completion: (Result<TokenInfo, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/jwks()",
                "title" : "func jwks() async throws -> JWKS",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/jwks(completion:)",
                "title" : "func jwks(completion: (Result<JWKS, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/openidconfiguration()",
                "title" : "func openIdConfiguration() async throws -> OpenIdConfiguration",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/openidconfiguration(completion:)",
                "title" : "func openIdConfiguration(completion: (Result<OpenIdConfiguration, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/refresh(_:)",
                "title" : "func refresh(Token) async throws -> Token",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/refresh(_:completion:)",
                "title" : "func refresh(Token, completion: (Result<Token, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/revoke(_:type:)",
                "title" : "func revoke(Token, type: Token.RevokeType) async throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/revoke(_:type:completion:)",
                "title" : "func revoke(Token, type: Token.RevokeType, completion: (Result<Void, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/shouldretry(request:)",
                "title" : "func shouldRetry(request: URLRequest) -> APIRetry",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2client\/userinfo(token:completion:)",
                "title" : "func userInfo(token: Token, completion: (Result<UserInfo, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/clientsecret(_:)",
                    "title" : "case clientSecret(String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/none",
                    "title" : "case none",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/additionalparameters",
                    "title" : "var additionalParameters: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/clientauthentication",
                "title" : "OAuth2Client.ClientAuthentication",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/cannotparsepropertylist(_:)",
                    "title" : "case cannotParsePropertyList(Error?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/defaultpropertylistnotfound",
                    "title" : "case defaultPropertyListNotFound",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/invalidconfiguration(name:value:)",
                    "title" : "case invalidConfiguration(name: String, value: String?)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/invalidpropertylist(url:)",
                    "title" : "case invalidPropertyList(url: URL)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/missingconfigurationvalues",
                    "title" : "case missingConfigurationValues",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/localizeddescription",
                        "title" : "var localizedDescription: String",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/error-implementations",
                    "title" : "Error Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/errordescription-5jfo5",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/errordescription-8fnpy",
                        "title" : "var errorDescription: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/failurereason",
                        "title" : "var failureReason: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/helpanchor",
                        "title" : "var helpAnchor: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/recoverysuggestion",
                        "title" : "var recoverySuggestion: String?",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror\/localizederror-implementations",
                    "title" : "LocalizedError Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/propertylistconfigurationerror",
                "title" : "OAuth2Client.PropertyListConfigurationError",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/additionalhttpheaders-g28t",
                    "title" : "var additionalHttpHeaders: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/baseurl",
                    "title" : "var baseURL: URL",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/requestidheader",
                    "title" : "var requestIdHeader: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/useragent",
                    "title" : "var userAgent: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/decode(_:from:userinfo:)",
                    "title" : "func decode<T>(T.Type, from: Data, userInfo: [CodingUserInfoKey : Any]?) throws -> T",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/didsend(request:received:)-2abw8",
                    "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/didsend(request:received:)-8no60",
                    "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/didsend(request:received:requestid:ratelimit:)",
                    "title" : "func didSend(request: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/error(from:)",
                    "title" : "func error(from: Data) -> Error?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/send(_:parsing:completion:)",
                    "title" : "func send<T>(URLRequest, parsing: APIParsingContext?, completion: (Result<APIResponse<T>, APIClientError>) -> Void)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/shouldretry(request:ratelimit:)",
                    "title" : "func shouldRetry(request: URLRequest, rateLimit: APIRateLimit) -> APIRetry",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/willsend(request:)",
                    "title" : "func willSend(request: inout URLRequest)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/apiclient-implementations",
                "title" : "APIClient Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/delegatecollection",
                    "title" : "var delegateCollection: DelegateCollection<OAuth2ClientDelegate>",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/add(delegate:)",
                    "title" : "func add(delegate: Self.Delegate)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/remove(delegate:)",
                    "title" : "func remove(delegate: Self.Delegate)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2client\/delegate",
                    "title" : "OAuth2Client.Delegate",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2client\/usesdelegatecollection-implementations",
                "title" : "UsesDelegateCollection Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2client",
            "title" : "OAuth2Client",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Classes",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/needsmigration",
                        "title" : "var needsMigration: Bool",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/migrate()",
                        "title" : "func migrate() throws",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/register()",
                        "title" : "static func register() throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/register(clientid:)",
                        "title" : "static func register(clientId: String?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/register(issuer:clientid:redirecturi:scopes:)",
                        "title" : "static func register(issuer: URL, clientId: String, redirectUri: URL, scopes: String)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc\/register(plist:)",
                        "title" : "static func register(plist: URL) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/sdkversion\/migration\/legacyoidc",
                    "title" : "SDKVersion.Migration.LegacyOIDC",
                    "type" : "class"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/sdkversion\/migration",
                "title" : "SDKVersion.Migration",
                "type" : "class"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/init(sdk:version:)",
                "title" : "init(sdk: String, version: String)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/displayname",
                "title" : "var displayName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/version",
                "title" : "let version: String",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/ismigrationneeded",
                "title" : "static var isMigrationNeeded: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/useragent",
                "title" : "static var userAgent: String",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/migrateifneeded()",
                "title" : "static func migrateIfNeeded() throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/register(migrator:)",
                "title" : "static func register(migrator: SDKVersionMigrator)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversion\/register(sdk:)",
                "title" : "static func register(sdk: SDKVersion)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/sdkversion",
            "title" : "SDKVersion",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/configuration",
                    "title" : "let configuration: OAuth2Client.Configuration",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/context-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/context-swift.struct",
                "title" : "Token.Context",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/id",
                    "title" : "let id: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/payload",
                    "title" : "let payload: [String : Any]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/tags",
                    "title" : "let tags: [String : String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/claims",
                        "title" : "var claims: [Claim]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/customclaims",
                        "title" : "var customClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/value(_:for:)",
                        "title" : "func value<T>(T.Type, for: String) -> T?",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/claimcontainer-implementations",
                    "title" : "ClaimContainer Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/decodable-implementations",
                    "title" : "Decodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/encodable-implementations",
                    "title" : "Encodable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/address",
                        "title" : "var address: [String : String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/allclaims",
                        "title" : "var allClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/authtime",
                        "title" : "var authTime: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/authenticationclass",
                        "title" : "var authenticationClass: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/authenticationmethods",
                        "title" : "var authenticationMethods: [String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/birthdate",
                        "title" : "var birthdate: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/email",
                        "title" : "var email: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/emailverified",
                        "title" : "var emailVerified: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/familyname",
                        "title" : "var familyName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/gender",
                        "title" : "var gender: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/givenname",
                        "title" : "var givenName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/locale",
                        "title" : "var locale: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/middlename",
                        "title" : "var middleName: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/name",
                        "title" : "var name: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/namecomponents",
                        "title" : "var nameComponents: PersonNameComponents",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/nickname",
                        "title" : "var nickname: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/phonenumber",
                        "title" : "var phoneNumber: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/phonenumberverified",
                        "title" : "var phoneNumberVerified: Bool?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/picture",
                        "title" : "var picture: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/preferredusername",
                        "title" : "var preferredUsername: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/profile",
                        "title" : "var profile: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/subject",
                        "title" : "var subject: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/timezone",
                        "title" : "var timeZone: TimeZone?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/updatedat",
                        "title" : "var updatedAt: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/userlocale",
                        "title" : "var userLocale: Locale?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/website",
                        "title" : "var website: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/zoneinfo",
                        "title" : "var zoneinfo: String?",
                        "type" : "property"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-1k55j",
                        "title" : "subscript<T>(Claim) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/subscript(_:)-3573v",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/hasclaims-implementations",
                    "title" : "HasClaims Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Type Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/metadata\/jsondecoder",
                        "title" : "static var jsonDecoder: JSONDecoder",
                        "type" : "property"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/metadata\/jsondecodable-implementations",
                    "title" : "JSONDecodable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/metadata",
                "title" : "Token.Metadata",
                "type" : "struct"
              },
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/==(_:_:)",
                "title" : "static func == (Token, Token) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/init(from:)",
                "title" : "convenience init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/accesstoken",
                "title" : "let accessToken: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/context-swift.property",
                "title" : "let context: Token.Context",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/devicesecret",
                "title" : "let deviceSecret: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/expiresin",
                "title" : "let expiresIn: TimeInterval",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/id",
                "title" : "var id: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/idtoken",
                "title" : "let idToken: JWT?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/isrefreshing",
                "title" : "var isRefreshing: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/issuedat",
                "title" : "let issuedAt: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/refreshtoken",
                "title" : "let refreshToken: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/scope",
                "title" : "let scope: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/tokentype",
                "title" : "let tokenType: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/token(of:)",
                "title" : "func token(of: Token.Kind) -> String?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/validate(using:with:)",
                "title" : "func validate(using: OAuth2Client, with: IDTokenValidatorContext?) throws",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/accesstokenvalidator",
                "title" : "static var accessTokenValidator: TokenHashValidator",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/devicesecretvalidator",
                "title" : "static var deviceSecretValidator: TokenHashValidator",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/idtokenvalidator",
                "title" : "static var idTokenValidator: IDTokenValidator",
                "type" : "property"
              },
              {
                "title" : "Type Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/from(refreshtoken:using:)",
                "title" : "static func from(refreshToken: String, using: OAuth2Client) async throws -> Token",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/token\/from(refreshtoken:using:completion:)",
                "title" : "static func from(refreshToken: String, using: OAuth2Client, completion: (Result<Token, OAuth2Error>) -> Void)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/kind\/accesstoken",
                    "title" : "case accessToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/kind\/devicesecret",
                    "title" : "case deviceSecret",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/kind\/idtoken",
                    "title" : "case idToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/kind\/refreshtoken",
                    "title" : "case refreshToken",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/kind\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/kind\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/kind\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/kind\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/kind",
                "title" : "Token.Kind",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/revoketype\/accesstoken",
                    "title" : "case accessToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/revoketype\/all",
                    "title" : "case all",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/revoketype\/devicesecret",
                    "title" : "case deviceSecret",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/revoketype\/refreshtoken",
                    "title" : "case refreshToken",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/token\/revoketype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/token\/revoketype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/revoketype",
                "title" : "Token.RevokeType",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/authorizationheader",
                    "title" : "var authorizationHeader: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/apiauthorization-implementations",
                "title" : "APIAuthorization Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/expiresat",
                    "title" : "var expiresAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/isexpired",
                    "title" : "var isExpired: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/token\/isvalid",
                    "title" : "var isValid: Bool",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/token\/expires-implementations",
                "title" : "Expires Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/token",
            "title" : "Token",
            "type" : "class"
          },
          {
            "title" : "Protocols",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiauthorization\/authorizationheader",
                "title" : "var authorizationHeader: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiauthorization",
            "title" : "APIAuthorization",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/additionalhttpheaders-77qac",
                        "title" : "var additionalHttpHeaders: [String : String]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/additionalhttpheaders-77qac",
                        "title" : "var additionalHttpHeaders: [String : String]?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/additionalhttpheaders-7z63z",
                "title" : "var additionalHttpHeaders: [String : String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclient\/baseurl",
                "title" : "var baseURL: URL",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/requestidheader-3s9s1",
                        "title" : "var requestIdHeader: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/requestidheader-3s9s1",
                        "title" : "var requestIdHeader: String?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/requestidheader-3029y",
                "title" : "var requestIdHeader: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclient\/session",
                "title" : "var session: URLSessionProtocol",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/useragent-1c89v",
                        "title" : "var userAgent: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/useragent-1c89v",
                        "title" : "var userAgent: String",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/useragent-8m9b4",
                "title" : "var userAgent: String",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclient\/decode(_:from:userinfo:)",
                "title" : "func decode<T>(T.Type, from: Data, userInfo: [CodingUserInfoKey : Any]?) throws -> T",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-1c12k",
                        "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-88sth",
                        "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-1c12k",
                        "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-7fkxl",
                        "title" : "func didSend(request: URLRequest, received: APIClientError)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-7fkxl",
                        "title" : "func didSend(request: URLRequest, received: APIClientError)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-88sth",
                        "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-42ak",
                "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-88sth",
                        "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-1c12k",
                        "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-7fkxl",
                        "title" : "func didSend(request: URLRequest, received: APIClientError)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-1c12k",
                        "title" : "func didSend(request: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-88sth",
                        "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-7fkxl",
                        "title" : "func didSend(request: URLRequest, received: APIClientError)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:)-5li2y",
                "title" : "func didSend<T>(request: URLRequest, received: APIResponse<T>)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclient\/didsend(request:received:requestid:ratelimit:)",
                "title" : "func didSend(request: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/error(from:)-2zqym",
                        "title" : "func error(from: Data) -> Error?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/error(from:)-2zqym",
                        "title" : "func error(from: Data) -> Error?",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/error(from:)-701g0",
                "title" : "func error(from: Data) -> Error?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/send(_:parsing:completion:)-9g3vj",
                        "title" : "func send<T>(URLRequest, parsing: APIParsingContext?, completion: (Result<APIResponse<T>, APIClientError>) -> Void)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/send(_:parsing:completion:)-9g3vj",
                        "title" : "func send<T>(URLRequest, parsing: APIParsingContext?, completion: (Result<APIResponse<T>, APIClientError>) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/send(_:parsing:completion:)-7pof9",
                "title" : "func send<T>(URLRequest, parsing: APIParsingContext?, completion: (Result<APIResponse<T>, APIClientError>) -> Void)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/shouldretry(request:ratelimit:)-4i6ks",
                        "title" : "func shouldRetry(request: URLRequest, rateLimit: APIRateLimit) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/shouldretry(request:ratelimit:)-4i6ks",
                        "title" : "func shouldRetry(request: URLRequest, rateLimit: APIRateLimit) -> APIRetry",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/shouldretry(request:ratelimit:)-5s7no",
                "title" : "func shouldRetry(request: URLRequest, rateLimit: APIRateLimit) -> APIRetry",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/willsend(request:)-72e7e",
                        "title" : "func willSend(request: inout URLRequest)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclient\/willsend(request:)-72e7e",
                        "title" : "func willSend(request: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClient Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclient\/willsend(request:)-9lrtd",
                "title" : "func willSend(request: inout URLRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiclient",
            "title" : "APIClient",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclientconfiguration\/baseurl",
                "title" : "var baseURL: URL",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiclientconfiguration",
            "title" : "APIClientConfiguration",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-7vw3y",
                        "title" : "func api<T>(client: APIClient, didSend: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-4mcbm",
                        "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-7vw3y",
                        "title" : "func api<T>(client: APIClient, didSend: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-4mcbm",
                        "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-4ob1d",
                "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-4mcbm",
                        "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-7vw3y",
                        "title" : "func api<T>(client: APIClient, didSend: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-7vw3y",
                        "title" : "func api<T>(client: APIClient, didSend: URLRequest, received: APIResponse<T>)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-4mcbm",
                        "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:)-8l08k",
                "title" : "func api<T>(client: APIClient, didSend: URLRequest, received: APIResponse<T>)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:requestid:ratelimit:)-5ofdu",
                        "title" : "func api(client: APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:requestid:ratelimit:)-5ofdu",
                        "title" : "func api(client: APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:didsend:received:requestid:ratelimit:)-4mdur",
                "title" : "func api(client: APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:shouldretry:)-6w2a8",
                        "title" : "func api(client: APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:shouldretry:)-6w2a8",
                        "title" : "func api(client: APIClient, shouldRetry: URLRequest) -> APIRetry",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:shouldretry:)-1f8ai",
                "title" : "func api(client: APIClient, shouldRetry: URLRequest) -> APIRetry",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:willsend:)-9cnzq",
                        "title" : "func api(client: APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:willsend:)-9cnzq",
                        "title" : "func api(client: APIClient, willSend: inout URLRequest)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclientdelegate\/api(client:willsend:)-9p8jr",
                "title" : "func api(client: APIClient, willSend: inout URLRequest)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiclientdelegate",
            "title" : "APIClientDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiparsingcontext\/codinguserinfo",
                "title" : "var codingUserInfo: [CodingUserInfoKey : Any]?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiparsingcontext\/error(from:)-422es",
                        "title" : "func error(from: Data) -> Error?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiparsingcontext\/error(from:)-422es",
                        "title" : "func error(from: Data) -> Error?",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIParsingContext Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiparsingcontext\/error(from:)-5p5cl",
                "title" : "func error(from: Data) -> Error?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apiparsingcontext\/resulttype(from:)-8sqh9",
                        "title" : "func resultType(from: HTTPURLResponse) -> APIResponseResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiparsingcontext\/resulttype(from:)-8sqh9",
                        "title" : "func resultType(from: HTTPURLResponse) -> APIResponseResult",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIParsingContext Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiparsingcontext\/resulttype(from:)-4ldi5",
                "title" : "func resultType(from: HTTPURLResponse) -> APIResponseResult",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiparsingcontext",
            "title" : "APIParsingContext",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequest\/responsetype",
                "title" : "ResponseType",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/acceptstype-3d3te",
                        "title" : "var acceptsType: APIContentType?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/acceptstype-3d3te",
                        "title" : "var acceptsType: APIContentType?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/acceptstype-529gv",
                "title" : "var acceptsType: APIContentType?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/authorization-9d1g4",
                        "title" : "var authorization: APIAuthorization?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/authorization-9d1g4",
                        "title" : "var authorization: APIAuthorization?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/authorization-7539h",
                "title" : "var authorization: APIAuthorization?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/cachepolicy-6ni0p",
                        "title" : "var cachePolicy: URLRequest.CachePolicy",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/cachepolicy-6ni0p",
                        "title" : "var cachePolicy: URLRequest.CachePolicy",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/cachepolicy-8eox0",
                "title" : "var cachePolicy: URLRequest.CachePolicy",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/contenttype-96qjt",
                        "title" : "var contentType: APIContentType?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/contenttype-96qjt",
                        "title" : "var contentType: APIContentType?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/contenttype-2rqd7",
                "title" : "var contentType: APIContentType?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/headers-9k3go",
                        "title" : "var headers: [String : APIRequestArgument?]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/headers-9k3go",
                        "title" : "var headers: [String : APIRequestArgument?]?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/headers-8ieky",
                "title" : "var headers: [String : APIRequestArgument?]?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/httpmethod-2jjvk",
                        "title" : "var httpMethod: APIRequestMethod",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/httpmethod-2jjvk",
                        "title" : "var httpMethod: APIRequestMethod",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/httpmethod-3kav0",
                "title" : "var httpMethod: APIRequestMethod",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/query-730ld",
                        "title" : "var query: [String : APIRequestArgument?]?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/query-730ld",
                        "title" : "var query: [String : APIRequestArgument?]?",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/query-96683",
                "title" : "var query: [String : APIRequestArgument?]?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/timeoutinterval-58cfn",
                        "title" : "var timeoutInterval: TimeInterval",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/timeoutinterval-58cfn",
                        "title" : "var timeoutInterval: TimeInterval",
                        "type" : "property"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/timeoutinterval-7fbtk",
                "title" : "var timeoutInterval: TimeInterval",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequest\/url",
                "title" : "var url: URL",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/body()-8cybb",
                        "title" : "func body() throws -> Data?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/body()-2spui",
                        "title" : "func body() throws -> Data?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/body()-8cybb",
                        "title" : "func body() throws -> Data?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/body()-6rb14",
                        "title" : "func body() throws -> Data?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/body()-6rb14",
                        "title" : "func body() throws -> Data?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/body()-2spui",
                        "title" : "func body() throws -> Data?",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/body()-2l9s0",
                "title" : "func body() throws -> Data?",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/request(for:)-9pe0",
                        "title" : "func request(for: APIClient) throws -> URLRequest",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/request(for:)-9pe0",
                        "title" : "func request(for: APIClient) throws -> URLRequest",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/request(for:)-20zou",
                "title" : "func request(for: APIClient) throws -> URLRequest",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:)-1f4t7",
                        "title" : "func send(to: APIClient, parsing: APIParsingContext?) async throws -> APIResponse<Self.ResponseType>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:)-1f4t7",
                        "title" : "func send(to: APIClient, parsing: APIParsingContext?) async throws -> APIResponse<Self.ResponseType>",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:)-5wi6c",
                "title" : "func send(to: APIClient, parsing: APIParsingContext?) async throws -> APIResponse<Self.ResponseType>",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:completion:)-831n8",
                        "title" : "func send(to: APIClient, parsing: APIParsingContext?, completion: (Result<APIResponse<Self.ResponseType>, APIClientError>) -> Void)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:completion:)-831n8",
                        "title" : "func send(to: APIClient, parsing: APIParsingContext?, completion: (Result<APIResponse<Self.ResponseType>, APIClientError>) -> Void)",
                        "type" : "method"
                      }
                    ],
                    "title" : "APIRequest Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequest\/send(to:parsing:completion:)-66wgf",
                "title" : "func send(to: APIClient, parsing: APIParsingContext?, completion: (Result<APIResponse<Self.ResponseType>, APIClientError>) -> Void)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apirequest",
            "title" : "APIRequest",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestargument\/stringvalue",
                "title" : "var stringValue: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apirequestargument",
            "title" : "APIRequestArgument",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestbody\/bodyparameters",
                "title" : "var bodyParameters: [String : Any]?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apirequestbody",
            "title" : "APIRequestBody",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authentication(flow:received:)-1a9vb",
                "title" : "func authentication<Flow>(flow: Flow, received: OAuth2Error)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authentication(flow:received:)-3zd8n",
                "title" : "func authentication<Flow>(flow: Flow, received: Token)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authenticationfinished(flow:)",
                "title" : "func authenticationFinished<Flow>(flow: Flow)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationdelegate\/authenticationstarted(flow:)",
                "title" : "func authenticationStarted<Flow>(flow: Flow)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/authenticationdelegate",
            "title" : "AuthenticationDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationflow\/isauthenticating",
                "title" : "var isAuthenticating: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationflow\/reset()",
                "title" : "func reset()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/authenticationflow",
            "title" : "AuthenticationFlow",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/claimcontainer\/claims",
                "title" : "var claims: [Claim]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/claimcontainer\/customclaims",
                "title" : "var customClaims: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/claimcontainer\/payload",
                "title" : "var payload: [String : Any]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/claimcontainer\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/claimcontainer\/value(_:for:)",
                "title" : "func value<T>(T.Type, for: String) -> T?",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/claimcontainer",
            "title" : "ClaimContainer",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialcoordinator\/credentialdatasource",
                "title" : "var credentialDataSource: CredentialDataSource",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialcoordinator\/tokenstorage",
                "title" : "var tokenStorage: TokenStorage",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialcoordinator\/observe(oauth2:)",
                "title" : "func observe(oauth2: OAuth2Client)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialcoordinator\/remove(credential:)",
                "title" : "func remove(credential: Credential) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/credentialcoordinator",
            "title" : "CredentialCoordinator",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/credentialcount",
                "title" : "var credentialCount: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/delegate",
                "title" : "var delegate: CredentialDataSourceDelegate?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/credential(for:coordinator:)",
                "title" : "func credential(for: Token, coordinator: CredentialCoordinator) -> Credential",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/hascredential(for:)",
                "title" : "func hasCredential(for: Token) -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/remove(credential:)",
                "title" : "func remove(credential: Credential)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/credentialdatasource\/urlsession(for:)-9ehm3",
                        "title" : "func urlSession(for: Token) -> URLSessionProtocol",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/credentialdatasource\/urlsession(for:)-9ehm3",
                        "title" : "func urlSession(for: Token) -> URLSessionProtocol",
                        "type" : "method"
                      }
                    ],
                    "title" : "CredentialDataSource Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialdatasource\/urlsession(for:)-4uxwd",
                "title" : "func urlSession(for: Token) -> URLSessionProtocol",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/credentialdatasource",
            "title" : "CredentialDataSource",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasourcedelegate\/credential(datasource:created:)",
                "title" : "func credential(dataSource: CredentialDataSource, created: Credential)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialdatasourcedelegate\/credential(datasource:removed:)",
                "title" : "func credential(dataSource: CredentialDataSource, removed: Credential)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/credentialdatasourcedelegate",
            "title" : "CredentialDataSourceDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/expires\/expiresat-579iu",
                        "title" : "var expiresAt: Date?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/expires\/expiresat-579iu",
                        "title" : "var expiresAt: Date?",
                        "type" : "property"
                      }
                    ],
                    "title" : "Expires Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/expires\/expiresat-8h3jt",
                "title" : "var expiresAt: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/expires\/expiresin",
                "title" : "var expiresIn: TimeInterval",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/expires\/isexpired-zfoq",
                        "title" : "var isExpired: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/expires\/isexpired-zfoq",
                        "title" : "var isExpired: Bool",
                        "type" : "property"
                      }
                    ],
                    "title" : "Expires Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/expires\/isexpired-1wbrv",
                "title" : "var isExpired: Bool",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/expires\/isvalid-pfo1",
                        "title" : "var isValid: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/expires\/isvalid-pfo1",
                        "title" : "var isValid: Bool",
                        "type" : "property"
                      }
                    ],
                    "title" : "Expires Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/expires\/isvalid-24xas",
                "title" : "var isValid: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/expires\/issuedat",
                "title" : "var issuedAt: Date?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/expires",
            "title" : "Expires",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/address",
                "title" : "var address: [String : String]?",
                "type" : "property"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/allclaims-5at8v",
                        "title" : "var allClaims: [String]",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/allclaims-5at8v",
                        "title" : "var allClaims: [String]",
                        "type" : "property"
                      }
                    ],
                    "title" : "HasClaims Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/hasclaims\/allclaims-4c54a",
                "title" : "var allClaims: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/authtime",
                "title" : "var authTime: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/authenticationclass",
                "title" : "var authenticationClass: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/authenticationmethods",
                "title" : "var authenticationMethods: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/birthdate",
                "title" : "var birthdate: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/claims",
                "title" : "var claims: [Claim]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/customclaims",
                "title" : "var customClaims: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/email",
                "title" : "var email: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/emailverified",
                "title" : "var emailVerified: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/familyname",
                "title" : "var familyName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/gender",
                "title" : "var gender: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/givenname",
                "title" : "var givenName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/locale",
                "title" : "var locale: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/middlename",
                "title" : "var middleName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/name",
                "title" : "var name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/namecomponents",
                "title" : "var nameComponents: PersonNameComponents",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/nickname",
                "title" : "var nickname: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/payload",
                "title" : "var payload: [String : Any]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/phonenumber",
                "title" : "var phoneNumber: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/phonenumberverified",
                "title" : "var phoneNumberVerified: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/picture",
                "title" : "var picture: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/preferredusername",
                "title" : "var preferredUsername: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/profile",
                "title" : "var profile: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/subject",
                "title" : "var subject: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/timezone",
                "title" : "var timeZone: TimeZone?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/updatedat",
                "title" : "var updatedAt: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/userlocale",
                "title" : "var userLocale: Locale?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/website",
                "title" : "var website: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/zoneinfo",
                "title" : "var zoneinfo: String?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/hasclaims\/value(_:for:)",
                "title" : "func value<T>(T.Type, for: String) -> T?",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-5oltt",
                        "title" : "subscript<T>(Claim) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-5oltt",
                        "title" : "subscript<T>(Claim) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-36se2",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-36se2",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      }
                    ],
                    "title" : "HasClaims Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-3hvf1",
                "title" : "subscript<T>(Claim) -> T?",
                "type" : "subscript"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-36se2",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-5oltt",
                        "title" : "subscript<T>(Claim) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-36se2",
                        "title" : "subscript<T>(String) -> T?",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-5oltt",
                        "title" : "subscript<T>(Claim) -> T?",
                        "type" : "subscript"
                      }
                    ],
                    "title" : "HasClaims Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/hasclaims\/subscript(_:)-4t0dl",
                "title" : "subscript<T>(String) -> T?",
                "type" : "subscript"
              }
            ],
            "path" : "\/documentation\/authfoundation\/hasclaims",
            "title" : "HasClaims",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/idtokenvalidator\/issuedatgraceinterval",
                "title" : "var issuedAtGraceInterval: TimeInterval",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/idtokenvalidator\/validate(token:issuer:clientid:context:)",
                "title" : "func validate(token: JWT, issuer: URL, clientId: String, context: IDTokenValidatorContext?) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/idtokenvalidator",
            "title" : "IDTokenValidator",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/idtokenvalidatorcontext\/maxage",
                "title" : "var maxAge: TimeInterval?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/idtokenvalidatorcontext\/nonce",
                "title" : "var nonce: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/idtokenvalidatorcontext",
            "title" : "IDTokenValidatorContext",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsondecodable\/jsondecoder",
                "title" : "static var jsonDecoder: JSONDecoder",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jsondecodable",
            "title" : "JSONDecodable",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwkvalidator\/validate(token:using:)",
                "title" : "func validate(token: JWT, using: JWKS) throws -> Bool",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwkvalidator",
            "title" : "JWKValidator",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/authfoundation\/keychainauthenticationcontext",
            "title" : "KeychainAuthenticationContext",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2apirequest\/openidconfiguration",
                "title" : "var openIdConfiguration: OpenIdConfiguration",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2apirequest",
            "title" : "OAuth2APIRequest",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:didrefresh:replacedwith:)-91fzt",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:didrefresh:replacedwith:)-91fzt",
                        "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                        "type" : "method"
                      }
                    ],
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:didrefresh:replacedwith:)-2rj5a",
                "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:willrefresh:)-18gv8",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:willrefresh:)-18gv8",
                        "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                        "type" : "method"
                      }
                    ],
                    "title" : "OAuth2ClientDelegate Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2clientdelegate\/oauth(client:willrefresh:)-7o00l",
                "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2clientdelegate",
            "title" : "OAuth2ClientDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2tokenrequest\/clientid",
                "title" : "var clientId: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2tokenrequest",
            "title" : "OAuth2TokenRequest",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversionmigrator\/needsmigration",
                "title" : "var needsMigration: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/sdkversionmigrator\/migrate()",
                "title" : "func migrate() throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/sdkversionmigrator",
            "title" : "SDKVersionMigrator",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/timecoordinator\/now",
                "title" : "var now: Date",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/timecoordinator\/date(from:)",
                "title" : "func date(from: Date) -> Date",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/timecoordinator",
            "title" : "TimeCoordinator",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/authfoundation\/tokenauthenticationcontext",
            "title" : "TokenAuthenticationContext",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenhashvalidator\/validate(_:idtoken:)",
                "title" : "func validate(String, idToken: JWT) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/tokenhashvalidator",
            "title" : "TokenHashValidator",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/allids",
                "title" : "var allIDs: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/defaulttokenid",
                "title" : "var defaultTokenID: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/delegate",
                "title" : "var delegate: TokenStorageDelegate?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/add(token:metadata:security:)",
                "title" : "func add(token: Token, metadata: Token.Metadata?, security: [Credential.Security]) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/get(token:prompt:authenticationcontext:)",
                "title" : "func get(token: String, prompt: String?, authenticationContext: TokenAuthenticationContext?) throws -> Token",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/metadata(for:)",
                "title" : "func metadata(for: String) throws -> Token.Metadata",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/remove(id:)",
                "title" : "func remove(id: String) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/replace(token:with:security:)",
                "title" : "func replace(token: String, with: Token, security: [Credential.Security]?) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/setdefaulttokenid(_:)",
                "title" : "func setDefaultTokenID(String?) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstorage\/setmetadata(_:)",
                "title" : "func setMetadata(Token.Metadata) throws",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/tokenstorage",
            "title" : "TokenStorage",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:added:token:)",
                "title" : "func token(storage: TokenStorage, added: String, token: Token)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:defaultchanged:)",
                "title" : "func token(storage: TokenStorage, defaultChanged: String?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:removed:)",
                "title" : "func token(storage: TokenStorage, removed: String)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenstoragedelegate\/token(storage:replaced:with:)",
                "title" : "func token(storage: TokenStorage, replaced: String, with: Token)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/tokenstoragedelegate",
            "title" : "TokenStorageDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/urlsessiondatataskprotocol\/resume()",
                "title" : "func resume()",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/urlsessiondatataskprotocol",
            "title" : "URLSessionDataTaskProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/urlsessionprotocol\/configuration",
                "title" : "var configuration: URLSessionConfiguration",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/urlsessionprotocol\/datataskwithrequest(_:completionhandler:)",
                "title" : "func dataTaskWithRequest(URLRequest, completionHandler: (Data?, URLResponse?, Error?) -> Void) -> URLSessionDataTaskProtocol",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/urlsessionprotocol\/datataskresult",
                "title" : "URLSessionProtocol.DataTaskResult",
                "type" : "typealias"
              }
            ],
            "path" : "\/documentation\/authfoundation\/urlsessionprotocol",
            "title" : "URLSessionProtocol",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/delegate",
                "title" : "Delegate",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/delegatecollection",
                "title" : "var delegateCollection: DelegateCollection<Self.Delegate>",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/add(delegate:)-85i7",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/add(delegate:)-85i7",
                        "title" : "func add(delegate: Self.Delegate)",
                        "type" : "method"
                      }
                    ],
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/add(delegate:)-2wa9w",
                "title" : "func add(delegate: Self.Delegate)",
                "type" : "method"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/remove(delegate:)-34r73",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/remove(delegate:)-34r73",
                        "title" : "func remove(delegate: Self.Delegate)",
                        "type" : "method"
                      }
                    ],
                    "title" : "UsesDelegateCollection Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/usesdelegatecollection\/remove(delegate:)-djzj",
                "title" : "func remove(delegate: Self.Delegate)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/authfoundation\/usesdelegatecollection",
            "title" : "UsesDelegateCollection",
            "type" : "protocol"
          },
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiratelimit\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiratelimit\/delay",
                "title" : "let delay: TimeInterval?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiratelimit\/limit",
                "title" : "let limit: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiratelimit\/remaining",
                "title" : "let remaining: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiratelimit\/reset",
                "title" : "let reset: TimeInterval",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiratelimit",
            "title" : "APIRateLimit",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/date",
                "title" : "let date: Date",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/links",
                "title" : "let links: [APIResponse<T>.Link : URL]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/rateinfo",
                "title" : "let rateInfo: APIRateLimit?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/requestid",
                "title" : "let requestId: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/result",
                "title" : "let result: T",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/statuscode",
                "title" : "let statusCode: Int",
                "type" : "property"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponse\/ratelimit",
                "title" : "APIResponse.RateLimit",
                "type" : "typealias"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/current",
                    "title" : "case current",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/next",
                    "title" : "case next",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/previous",
                    "title" : "case previous",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/apiresponse\/link\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/apiresponse\/link\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiresponse\/link",
                "title" : "APIResponse.Link",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiresponse",
            "title" : "APIResponse",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/empty\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              }
            ],
            "path" : "\/documentation\/authfoundation\/empty",
            "title" : "Empty",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.property",
                "title" : "let algorithm: JWK.Algorithm?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/id-5ooz1",
                "title" : "let id: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/rsaexponent",
                "title" : "let rsaExponent: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/rsamodulus",
                "title" : "let rsaModulus: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/type",
                "title" : "let type: JWK.KeyType",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.property",
                "title" : "let usage: JWK.Usage",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/encode(to:)",
                "title" : "func encode(to: Encoder) throws",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/verify(token:)",
                "title" : "func verify(token: JWT) throws -> Bool",
                "type" : "method"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwk\/validator",
                "title" : "static var validator: JWKValidator",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a128gcmkw",
                    "title" : "case a128GCMKW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a128kw",
                    "title" : "case a128KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a192gcmkw",
                    "title" : "case a192GCMKW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a192kw",
                    "title" : "case a192KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a256gcmkw",
                    "title" : "case a256GCMKW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/a256kw",
                    "title" : "case a256KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/dir",
                    "title" : "case dir",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes",
                    "title" : "case ecdhES",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes_a128kw",
                    "title" : "case ecdhES_a128KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes_a192kw",
                    "title" : "case ecdhES_a192KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ecdhes_a256kw",
                    "title" : "case ecdhES_a256KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/es256",
                    "title" : "case es256",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/es384",
                    "title" : "case es384",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/es512",
                    "title" : "case es512",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hs256",
                    "title" : "case hs256",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hs384",
                    "title" : "case hs384",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hs512",
                    "title" : "case hs512",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/none",
                    "title" : "case none",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/pbes2_hs256_a128kw",
                    "title" : "case pbes2_HS256_A128KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/pbes2_hs384_a192kw",
                    "title" : "case pbes2_HS384_A192KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/pbes2_hs512_a256kw",
                    "title" : "case pbes2_HS512_A256KW",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ps256",
                    "title" : "case ps256",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ps384",
                    "title" : "case ps384",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/ps512",
                    "title" : "case ps512",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rs256",
                    "title" : "case rs256",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rs384",
                    "title" : "case rs384",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rs512",
                    "title" : "case rs512",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rsa1_5",
                    "title" : "case rsa1_5",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rsaoaep",
                    "title" : "case rsaOAEP",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rsaoaep256",
                    "title" : "case rsaOAEP256",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk\/algorithm-swift.enum",
                "title" : "JWK.Algorithm",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/ellipticcurve",
                    "title" : "case ellipticCurve",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/octetsequence",
                    "title" : "case octetSequence",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/rsa",
                    "title" : "case rsa",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/keytype\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/keytype\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk\/keytype",
                "title" : "JWK.KeyType",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/encryption",
                    "title" : "case encryption",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/signature",
                    "title" : "case signature",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk\/usage-swift.enum",
                "title" : "JWK.Usage",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwk\/id-7lob6",
                    "title" : "var id: ObjectIdentifier",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwk\/identifiable-implementations",
                "title" : "Identifiable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwk",
            "title" : "JWK",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/==(_:_:)",
                "title" : "static func == (JWKS, JWKS) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/endindex",
                "title" : "var endIndex: JWKS.Index",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/startindex",
                "title" : "var startIndex: JWKS.Index",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/index(after:)",
                "title" : "func index(after: JWKS.Index) -> JWKS.Index",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-1lvoo",
                "title" : "subscript(String) -> JWK?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-1qepr",
                "title" : "subscript(JWKS.Index) -> JWKS.Element",
                "type" : "subscript"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/element",
                "title" : "JWKS.Element",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwks\/index",
                "title" : "JWKS.Index",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/first",
                    "title" : "var first: Self.Element?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/indices",
                    "title" : "var indices: DefaultIndices<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/underestimatedcount-58gny",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/distance(from:to:)",
                    "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/drop(while:)",
                    "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/dropfirst(_:)",
                    "title" : "func dropFirst(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/droplast(_:)",
                    "title" : "func dropLast(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/firstindex(of:)",
                    "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/firstindex(where:)",
                    "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/firstrange(of:)",
                    "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/formindex(_:offsetby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/formindex(_:offsetby:limitedby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/formindex(after:)",
                    "title" : "func formIndex(after: inout Self.Index)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/index(_:offsetby:)",
                    "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/index(_:offsetby:limitedby:)",
                    "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/index(of:)",
                    "title" : "func index(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/makeiterator()",
                    "title" : "func makeIterator() -> IndexingIterator<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/map(_:)-1a04p",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/prefix(_:)",
                    "title" : "func prefix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/prefix(through:)",
                    "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/prefix(upto:)",
                    "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/prefix(while:)",
                    "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/randomelement()",
                    "title" : "func randomElement() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/randomelement(using:)",
                    "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/ranges(of:)",
                    "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/split(separator:maxsplits:omittingemptysubsequences:)",
                    "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/suffix(_:)",
                    "title" : "func suffix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/suffix(from:)",
                    "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/trimmingprefix(_:)",
                    "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/trimmingprefix(while:)",
                    "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-4t0w0",
                    "title" : "subscript<R>(R) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-5kdvj",
                    "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/subscript(_:)-78ks6",
                    "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwks\/collection-implementations",
                "title" : "Collection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwks\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/lazy",
                    "title" : "var lazy: LazySequence<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/publisher",
                    "title" : "var publisher: Publishers.Sequence<Self, Never>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/underestimatedcount-1bgzu",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/allsatisfy(_:)",
                    "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/compactmap(_:)",
                    "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/compare(_:_:)",
                    "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/contains(_:)",
                    "title" : "func contains(Self.Element) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/contains(where:)",
                    "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/elementsequal(_:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/elementsequal(_:by:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/enumerated()",
                    "title" : "func enumerated() -> EnumeratedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/filter(_:)",
                    "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/first(where:)",
                    "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/flatmap(_:)-4liif",
                    "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/flatmap(_:)-6nmde",
                    "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/foreach(_:)",
                    "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/formatted(_:)",
                    "title" : "func formatted<S>(S) -> S.FormatOutput",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/lexicographicallyprecedes(_:by:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/map(_:)-1i8gg",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/max(by:)",
                    "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/min(by:)",
                    "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/reduce(_:_:)",
                    "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/reduce(into:_:)",
                    "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/reversed()",
                    "title" : "func reversed() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/shuffled()",
                    "title" : "func shuffled() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/shuffled(using:)",
                    "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/sorted(by:)",
                    "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/sorted(using:)-4bnuh",
                    "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/sorted(using:)-984w9",
                    "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/starts(with:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/starts(with:by:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwks\/withcontiguousstorageifavailable(_:)",
                    "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwks\/sequence-implementations",
                "title" : "Sequence Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwks",
            "title" : "JWKS",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct\/algorithm",
                    "title" : "let algorithm: JWK.Algorithm",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct\/keyid",
                    "title" : "let keyId: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwt\/header-swift.struct",
                "title" : "JWT.Header",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/init(_:)",
                "title" : "init(String) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/init(rawvalue:)",
                "title" : "init?(rawValue: JWT.RawValue)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/audience",
                "title" : "var audience: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/authenticationcontext",
                "title" : "var authenticationContext: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/authenticationmethods-8d0og",
                "title" : "var authenticationMethods: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/claims",
                "title" : "var claims: [Claim]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/customclaims",
                "title" : "var customClaims: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/expirationtime",
                "title" : "var expirationTime: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/expiresin",
                "title" : "var expiresIn: TimeInterval",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/header-swift.property",
                "title" : "let header: JWT.Header",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/issuedat",
                "title" : "var issuedAt: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/issuer",
                "title" : "var issuer: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/notbefore",
                "title" : "var notBefore: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/payload",
                "title" : "let payload: [String : Any]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/rawvalue-swift.property",
                "title" : "let rawValue: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/scope",
                "title" : "var scope: [String]?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/validate(using:)",
                "title" : "func validate(using: JWKS) throws -> Bool",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/value(_:for:)",
                "title" : "func value<T>(T.Type, for: String) -> T?",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwt\/rawvalue-swift.typealias",
                "title" : "JWT.RawValue",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/expiresat",
                    "title" : "var expiresAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/isexpired",
                    "title" : "var isExpired: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/isvalid",
                    "title" : "var isValid: Bool",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwt\/expires-implementations",
                "title" : "Expires Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/address",
                    "title" : "var address: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/allclaims",
                    "title" : "var allClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/authtime",
                    "title" : "var authTime: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/authenticationclass",
                    "title" : "var authenticationClass: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/authenticationmethods-1cr91",
                    "title" : "var authenticationMethods: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/birthdate",
                    "title" : "var birthdate: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/email",
                    "title" : "var email: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/emailverified",
                    "title" : "var emailVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/familyname",
                    "title" : "var familyName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/gender",
                    "title" : "var gender: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/givenname",
                    "title" : "var givenName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/locale",
                    "title" : "var locale: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/middlename",
                    "title" : "var middleName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/namecomponents",
                    "title" : "var nameComponents: PersonNameComponents",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/nickname",
                    "title" : "var nickname: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/phonenumber",
                    "title" : "var phoneNumber: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/phonenumberverified",
                    "title" : "var phoneNumberVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/picture",
                    "title" : "var picture: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/preferredusername",
                    "title" : "var preferredUsername: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/profile",
                    "title" : "var profile: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/subject",
                    "title" : "var subject: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/timezone",
                    "title" : "var timeZone: TimeZone?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/updatedat",
                    "title" : "var updatedAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/userlocale",
                    "title" : "var userLocale: Locale?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/website",
                    "title" : "var website: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/zoneinfo",
                    "title" : "var zoneinfo: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-7rgy1",
                    "title" : "subscript<T>(Claim) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/subscript(_:)-9g5qo",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwt\/hasclaims-implementations",
                "title" : "HasClaims Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwt\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwt\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwt",
            "title" : "JWT",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/init(account:service:server:accessibility:accessgroup:accesscontrol:synchronizable:label:description:generic:value:)",
                    "title" : "init(account: String, service: String?, server: String?, accessibility: Keychain.Accessibility?, accessGroup: String?, accessControl: SecAccessControl?, synchronizable: Bool?, label: String?, description: String?, generic: Data?, value: Data)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/accesscontrol",
                    "title" : "var accessControl: SecAccessControl?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/accessgroup",
                    "title" : "var accessGroup: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/accessibility",
                    "title" : "var accessibility: Keychain.Accessibility?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/account",
                    "title" : "let account: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/description",
                    "title" : "var description: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/generic",
                    "title" : "var generic: Data?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/label",
                    "title" : "var label: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/server",
                    "title" : "let server: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/service",
                    "title" : "let service: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/synchronizable",
                    "title" : "var synchronizable: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/value",
                    "title" : "var value: Data",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/delete()",
                    "title" : "func delete() throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/save(authenticationcontext:)",
                    "title" : "func save(authenticationContext: KeychainAuthenticationContext?) throws -> Keychain.Item",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/update(_:authenticationcontext:)",
                    "title" : "func update(Keychain.Item, authenticationContext: KeychainAuthenticationContext?) throws",
                    "type" : "method"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/item\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/item\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychain\/item",
                "title" : "Keychain.Item",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/accesscontrol",
                        "title" : "var accessControl: SecAccessControl?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/accessgroup",
                        "title" : "let accessGroup: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/accessibility",
                        "title" : "var accessibility: Keychain.Accessibility?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/account",
                        "title" : "let account: String",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/creationdate",
                        "title" : "let creationDate: Date",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/description",
                        "title" : "let description: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/generic",
                        "title" : "let generic: Data?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/label",
                        "title" : "let label: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/modificationdate",
                        "title" : "let modificationDate: Date",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/server",
                        "title" : "let server: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/service",
                        "title" : "let service: String?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/synchronizable",
                        "title" : "var synchronizable: Bool?",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/delete()",
                        "title" : "func delete() throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/get(prompt:authenticationcontext:)",
                        "title" : "func get(prompt: String?, authenticationContext: KeychainAuthenticationContext?) throws -> Keychain.Item",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/search\/result\/update(_:authenticationcontext:)",
                        "title" : "func update(Keychain.Item, authenticationContext: KeychainAuthenticationContext?) throws",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/result",
                    "title" : "Keychain.Search.Result",
                    "type" : "struct"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/init(account:service:server:accessgroup:)",
                    "title" : "init(account: String?, service: String?, server: String?, accessGroup: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/accessgroup",
                    "title" : "let accessGroup: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/account",
                    "title" : "let account: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/server",
                    "title" : "let server: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/service",
                    "title" : "let service: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/delete()",
                    "title" : "func delete() throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/get(prompt:authenticationcontext:)",
                    "title" : "func get(prompt: String?, authenticationContext: KeychainAuthenticationContext?) throws -> Keychain.Item",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/search\/list()",
                    "title" : "func list() throws -> [Keychain.Search.Result]",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychain\/search",
                "title" : "Keychain.Search",
                "type" : "struct"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/afterfirstunlock",
                    "title" : "case afterFirstUnlock",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/afterfirstunlockthisdeviceonly",
                    "title" : "case afterFirstUnlockThisDeviceOnly",
                    "type" : "case"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/always",
                    "title" : "case always",
                    "type" : "case"
                  },
                  {
                    "deprecated" : true,
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/alwaysthisdeviceonly",
                    "title" : "case alwaysThisDeviceOnly",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/unlocked",
                    "title" : "case unlocked",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/unlockedthisdeviceonly",
                    "title" : "case unlockedThisDeviceOnly",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/whenpasswordsetthisdeviceonly",
                    "title" : "case whenPasswordSetThisDeviceOnly",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/rawvalue-swift.property",
                        "title" : "var rawValue: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/rawvalue-swift.typealias",
                        "title" : "Keychain.Accessibility.RawValue",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/keychain\/accessibility\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychain\/accessibility",
                "title" : "Keychain.Accessibility",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/authfoundation\/keychain",
            "title" : "Keychain",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/==(_:_:)",
                "title" : "static func == (OAuth2ServerError, OAuth2ServerError) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/init(code:description:additionalvalues:)",
                "title" : "init(code: String, description: String?, additionalValues: [String : Any])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/additionalvalues",
                "title" : "var additionalValues: [String : Any]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.property",
                "title" : "let code: OAuth2ServerError.Code",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/description",
                "title" : "let description: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/errordescription-2n95u",
                "title" : "var errorDescription: String?",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/accessdenied",
                    "title" : "case accessDenied",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/authorizationpending",
                    "title" : "case authorizationPending",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/directauthauthorizationpending",
                    "title" : "case directAuthAuthorizationPending",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/expiredtoken",
                    "title" : "case expiredToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidchallengetypessupported",
                    "title" : "case invalidChallengeTypesSupported",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidclient",
                    "title" : "case invalidClient",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidgrant",
                    "title" : "case invalidGrant",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidotp",
                    "title" : "case invalidOTP",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidrequest",
                    "title" : "case invalidRequest",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidscope",
                    "title" : "case invalidScope",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/invalidtoken",
                    "title" : "case invalidToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/mfarequired",
                    "title" : "case mfaRequired",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/oobrejected",
                    "title" : "case oobRejected",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/other(code:)",
                    "title" : "case other(code: String)",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/servererror",
                    "title" : "case serverError",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/slowdown",
                    "title" : "case slowDown",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/temporarilyunavailable",
                    "title" : "case temporarilyUnavailable",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/unauthorizedclient",
                    "title" : "case unauthorizedClient",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/unsupportedresponsemode",
                    "title" : "case unsupportedResponseMode",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/unsupportedresponsetype",
                    "title" : "case unsupportedResponseType",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/init(rawvalue:)",
                        "title" : "init?(rawValue: String)",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/rawvalue-swift.property",
                        "title" : "var rawValue: String",
                        "type" : "property"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/rawvalue-swift.typealias",
                        "title" : "OAuth2ServerError.Code.RawValue",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/code-swift.enum",
                "title" : "OAuth2ServerError.Code",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/errordescription-3vcs",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2servererror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2servererror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2servererror",
            "title" : "OAuth2ServerError",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/causes",
                "title" : "let causes: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/code",
                "title" : "let code: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/errordescription-336gx",
                "title" : "var errorDescription: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/id",
                "title" : "let id: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/link",
                "title" : "let link: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/oktaapierror\/summary",
                "title" : "let summary: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oktaapierror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oktaapierror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/errordescription-31v0k",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oktaapierror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oktaapierror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oktaapierror",
            "title" : "OktaAPIError",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/authorizationendpoint",
                "title" : "let authorizationEndpoint: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/claimssupported",
                "title" : "let claimsSupported: [Claim]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/deviceauthorizationendpoint",
                "title" : "let deviceAuthorizationEndpoint: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/endsessionendpoint",
                "title" : "let endSessionEndpoint: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/granttypessupported",
                "title" : "let grantTypesSupported: [GrantType]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/introspectionendpoint",
                "title" : "let introspectionEndpoint: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/issuer",
                "title" : "let issuer: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/jwksuri",
                "title" : "let jwksUri: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/registrationendpoint",
                "title" : "let registrationEndpoint: URL?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/responsemodessupported",
                "title" : "let responseModesSupported: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/responsetypessupported",
                "title" : "let responseTypesSupported: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/revocationendpoint",
                "title" : "let revocationEndpoint: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/scopessupported",
                "title" : "let scopesSupported: [String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/subjecttypessupported",
                "title" : "let subjectTypesSupported: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/tokenendpoint",
                "title" : "let tokenEndpoint: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/userinfoendpoint",
                "title" : "let userinfoEndpoint: URL?",
                "type" : "property"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/openidconfiguration\/jsondecoder",
                "title" : "static let jsonDecoder: JSONDecoder",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/openidconfiguration",
            "title" : "OpenIdConfiguration",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/pkce\/init()",
                "title" : "init?()",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/pkce\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/pkce\/codechallenge",
                "title" : "let codeChallenge: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/pkce\/codeverifier",
                "title" : "let codeVerifier: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/pkce\/method-swift.property",
                "title" : "let method: PKCE.Method",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/plain",
                    "title" : "case plain",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/sha256",
                    "title" : "case sha256",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Initializers",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/init(from:)",
                        "title" : "init(from: Decoder) throws",
                        "type" : "init"
                      },
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/encode(to:)",
                        "title" : "func encode(to: Encoder) throws",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/pkce\/method-swift.enum",
                "title" : "PKCE.Method",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/pkce\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/pkce\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/pkce",
            "title" : "PKCE",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/init(_:)",
                "title" : "init([String : Any])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/active",
                "title" : "var active: Bool?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/payload",
                "title" : "let payload: [String : Any]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokeninfo\/username",
                "title" : "var username: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/claims",
                    "title" : "var claims: [Claim]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/customclaims",
                    "title" : "var customClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/value(_:for:)",
                    "title" : "func value<T>(T.Type, for: String) -> T?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokeninfo\/claimcontainer-implementations",
                "title" : "ClaimContainer Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/address",
                    "title" : "var address: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/allclaims",
                    "title" : "var allClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/authtime",
                    "title" : "var authTime: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/authenticationclass",
                    "title" : "var authenticationClass: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/authenticationmethods",
                    "title" : "var authenticationMethods: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/birthdate",
                    "title" : "var birthdate: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/email",
                    "title" : "var email: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/emailverified",
                    "title" : "var emailVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/familyname",
                    "title" : "var familyName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/gender",
                    "title" : "var gender: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/givenname",
                    "title" : "var givenName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/locale",
                    "title" : "var locale: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/middlename",
                    "title" : "var middleName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/namecomponents",
                    "title" : "var nameComponents: PersonNameComponents",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/nickname",
                    "title" : "var nickname: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/phonenumber",
                    "title" : "var phoneNumber: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/phonenumberverified",
                    "title" : "var phoneNumberVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/picture",
                    "title" : "var picture: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/preferredusername",
                    "title" : "var preferredUsername: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/profile",
                    "title" : "var profile: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/subject",
                    "title" : "var subject: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/timezone",
                    "title" : "var timeZone: TimeZone?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/updatedat",
                    "title" : "var updatedAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/userlocale",
                    "title" : "var userLocale: Locale?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/website",
                    "title" : "var website: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/zoneinfo",
                    "title" : "var zoneinfo: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-4q5sv",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/subscript(_:)-4tgeh",
                    "title" : "subscript<T>(Claim) -> T?",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokeninfo\/hasclaims-implementations",
                "title" : "HasClaims Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokeninfo\/jsondecoder",
                    "title" : "static var jsonDecoder: JSONDecoder",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokeninfo\/jsondecodable-implementations",
                "title" : "JSONDecodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/tokeninfo",
            "title" : "TokenInfo",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/userinfo\/init(_:)",
                "title" : "init([String : Any])",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/authfoundation\/userinfo\/init(from:)",
                "title" : "init(from: Decoder) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/userinfo\/payload",
                "title" : "let payload: [String : Any]",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/claims",
                    "title" : "var claims: [Claim]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/customclaims",
                    "title" : "var customClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/value(_:for:)",
                    "title" : "func value<T>(T.Type, for: String) -> T?",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/userinfo\/claimcontainer-implementations",
                "title" : "ClaimContainer Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/address",
                    "title" : "var address: [String : String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/allclaims",
                    "title" : "var allClaims: [String]",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/authtime",
                    "title" : "var authTime: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/authenticationclass",
                    "title" : "var authenticationClass: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/authenticationmethods",
                    "title" : "var authenticationMethods: [String]?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/birthdate",
                    "title" : "var birthdate: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/email",
                    "title" : "var email: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/emailverified",
                    "title" : "var emailVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/familyname",
                    "title" : "var familyName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/gender",
                    "title" : "var gender: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/givenname",
                    "title" : "var givenName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/locale",
                    "title" : "var locale: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/middlename",
                    "title" : "var middleName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/name",
                    "title" : "var name: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/namecomponents",
                    "title" : "var nameComponents: PersonNameComponents",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/nickname",
                    "title" : "var nickname: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/phonenumber",
                    "title" : "var phoneNumber: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/phonenumberverified",
                    "title" : "var phoneNumberVerified: Bool?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/picture",
                    "title" : "var picture: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/preferredusername",
                    "title" : "var preferredUsername: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/profile",
                    "title" : "var profile: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/subject",
                    "title" : "var subject: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/timezone",
                    "title" : "var timeZone: TimeZone?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/updatedat",
                    "title" : "var updatedAt: Date?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/userlocale",
                    "title" : "var userLocale: Locale?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/website",
                    "title" : "var website: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/zoneinfo",
                    "title" : "var zoneinfo: String?",
                    "type" : "property"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-35gb6",
                    "title" : "subscript<T>(Claim) -> T?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/subscript(_:)-3i6lx",
                    "title" : "subscript<T>(String) -> T?",
                    "type" : "subscript"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/userinfo\/hasclaims-implementations",
                "title" : "HasClaims Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/userinfo\/jsondecoder",
                    "title" : "static var jsonDecoder: JSONDecoder",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/userinfo\/jsondecodable-implementations",
                "title" : "JSONDecodable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/userinfo",
            "title" : "UserInfo",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/weak\/init(_:)",
                "title" : "init?(Object?)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/weak\/wrappedvalue",
                "title" : "var wrappedValue: Object?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/weak\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/weak\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/weak\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/weak\/hashable-implementations",
                "title" : "Hashable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/weak",
            "title" : "Weak",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/weakcollection\/init(wrappedvalue:)",
                "title" : "init(wrappedValue: Collect)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/weakcollection\/wrappedvalue",
                "title" : "var wrappedValue: Collect",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/weakcollection\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/weakcollection\/==(_:_:)",
                    "title" : "static func == (WeakCollection<Collect, Element>, WeakCollection<Collect, Element>) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/weakcollection\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/weakcollection\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/weakcollection\/hashable-implementations",
                "title" : "Hashable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/weakcollection",
            "title" : "WeakCollection",
            "type" : "struct"
          },
          {
            "title" : "Variables",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/authfoundation\/version",
            "title" : "let Version: SDKVersion",
            "type" : "var"
          },
          {
            "title" : "Enumerations",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/cannotparseresponse(error:)",
                "title" : "case cannotParseResponse(error: Error)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/invalidrequestdata",
                "title" : "case invalidRequestData",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/invalidresponse",
                "title" : "case invalidResponse",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/invalidurl",
                "title" : "case invalidUrl",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/missingrefreshsettings",
                "title" : "case missingRefreshSettings",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/missingresponse",
                "title" : "case missingResponse",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/servererror(_:)",
                "title" : "case serverError(Error)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/statuscode(_:)",
                "title" : "case statusCode(Int)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/unknown",
                "title" : "case unknown",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/unsupportedcontenttype(_:)",
                "title" : "case unsupportedContentType(APIContentType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiclienterror\/validation(error:)",
                "title" : "case validation(error: Error)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/==(_:_:)",
                    "title" : "static func == (APIClientError, APIClientError) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclienterror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclienterror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/errordescription-7e35h",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/errordescription-7unw",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiclienterror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiclienterror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiclienterror",
            "title" : "APIClientError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apicontenttype\/formencoded",
                "title" : "case formEncoded",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apicontenttype\/json",
                "title" : "case json",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apicontenttype\/other(_:)",
                "title" : "case other(String)",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apicontenttype\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apicontenttype\/rawvalue-swift.typealias",
                "title" : "APIContentType.RawValue",
                "type" : "typealias"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apicontenttype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apicontenttype\/rawvalue-swift.property",
                    "title" : "var rawValue: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apicontenttype\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apicontenttype",
            "title" : "APIContentType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/delete",
                "title" : "case delete",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/get",
                "title" : "case get",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/head",
                "title" : "case head",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/patch",
                "title" : "case patch",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/post",
                "title" : "case post",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/put",
                "title" : "case put",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/init(rawvalue:)",
                "title" : "init?(rawValue: String)",
                "type" : "init"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apirequestmethod\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apirequestmethod\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apirequestmethod",
            "title" : "APIRequestMethod",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponseresult\/error",
                "title" : "case error",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponseresult\/retry",
                "title" : "case retry",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiresponseresult\/success",
                "title" : "case success",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/apiresponseresult\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/apiresponseresult\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiresponseresult",
            "title" : "APIResponseResult",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiretry\/donotretry",
                "title" : "case doNotRetry",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiretry\/retry(maximumcount:)",
                "title" : "case retry(maximumCount: Int)",
                "type" : "case"
              },
              {
                "title" : "Type Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/apiretry\/default",
                "title" : "static let `default`: APIRetry",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/authfoundation\/apiretry",
            "title" : "APIRetry",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/authenticationerror\/flownotready",
                "title" : "case flowNotReady",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationerror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationerror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/authenticationerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/authenticationerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/authenticationerror",
            "title" : "AuthenticationError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/accesstokenhash",
                "title" : "case accessTokenHash",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/aceprofile",
                "title" : "case aceProfile",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/actor",
                "title" : "case actor",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/address",
                "title" : "case address",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/attestationlevel",
                "title" : "case attestationLevel",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/audience",
                "title" : "case audience",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/authcontextclassreference",
                "title" : "case authContextClassReference",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/authmethodsreference",
                "title" : "case authMethodsReference",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/authtime",
                "title" : "case authTime",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/authorizedactor",
                "title" : "case authorizedActor",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/authorizedparty",
                "title" : "case authorizedParty",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/birthdate",
                "title" : "case birthdate",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/clientid",
                "title" : "case clientId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/clientnonce",
                "title" : "case clientNonce",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/codehash",
                "title" : "case codeHash",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/confirmation",
                "title" : "case confirmation",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/custom(_:)",
                "title" : "case custom(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/destinationidentity",
                "title" : "case destinationIdentity",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/divertedtarget",
                "title" : "case divertedTarget",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/email",
                "title" : "case email",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/emailverified",
                "title" : "case emailVerified",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/entitlements",
                "title" : "case entitlements",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/events",
                "title" : "case events",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/expirationtime",
                "title" : "case expirationTime",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/expiresin",
                "title" : "case expiresIn",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/familyname",
                "title" : "case familyName",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/gender",
                "title" : "case gender",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/givenname",
                "title" : "case givenName",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/groups",
                "title" : "case groups",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/identityprovider",
                "title" : "case identityProvider",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/issuedat",
                "title" : "case issuedAt",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/issuer",
                "title" : "case issuer",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/jcarddata",
                "title" : "case jcardData",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/jwtid",
                "title" : "case jwtId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/locale",
                "title" : "case locale",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/maxapirequestcount",
                "title" : "case maxAPIRequestCount",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/mediakeyfingerprint",
                "title" : "case mediaKeyFingerprint",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/middlename",
                "title" : "case middleName",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/name",
                "title" : "case name",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/nickname",
                "title" : "case nickname",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/nonce",
                "title" : "case nonce",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/notbefore",
                "title" : "case notBefore",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/originalpassport",
                "title" : "case originalPassport",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/originatingid",
                "title" : "case originatingId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/originatingidentity",
                "title" : "case originatingIdentity",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/phonenumber",
                "title" : "case phoneNumber",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/phonenumberverified",
                "title" : "case phoneNumberVerified",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/picture",
                "title" : "case picture",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/preferredusername",
                "title" : "case preferredUsername",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/profile",
                "title" : "case profile",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/resourcepriorityheader",
                "title" : "case resourcePriorityHeader",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/roles",
                "title" : "case roles",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/scope",
                "title" : "case scope",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/sessionid",
                "title" : "case sessionId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/sipcseqnum",
                "title" : "case sipCSeqNum",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/sipcallid",
                "title" : "case sipCallId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/sipdate",
                "title" : "case sipDate",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/sipfromtag",
                "title" : "case sipFromTag",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/sippriorityheader",
                "title" : "case sipPriorityHeader",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/sipviabranch",
                "title" : "case sipViaBranch",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/subject",
                "title" : "case subject",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/subjectpublickey",
                "title" : "case subjectPublicKey",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/timeofevent",
                "title" : "case timeOfEvent",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/tokenintrospection",
                "title" : "case tokenIntrospection",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/transactionid",
                "title" : "case transactionId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/updatedat",
                "title" : "case updatedAt",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/userid",
                "title" : "case userId",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/vectoroftrust",
                "title" : "case vectorOfTrust",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/vectoroftrustmark",
                "title" : "case vectorOfTrustMark",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/verifiablecredential",
                "title" : "case verifiableCredential",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/verifiablepresentation",
                "title" : "case verifiablePresentation",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/version",
                "title" : "case version",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/website",
                "title" : "case website",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/claim\/zoneinfo",
                "title" : "case zoneinfo",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claim\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/claim\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claim\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claim\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claim\/rawvalue-swift.property",
                    "title" : "var rawValue: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claim\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/claim\/rawvalue-swift.typealias",
                    "title" : "Claim.RawValue",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/claim\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/claim",
            "title" : "Claim",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialerror\/incorrectclientconfiguration",
                "title" : "case incorrectClientConfiguration",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialerror\/metadataconsistency",
                "title" : "case metadataConsistency",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/credentialerror\/missingcoordinator",
                "title" : "case missingCoordinator",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialerror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/errordescription-8zc9g",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/errordescription-s9qz",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/credentialerror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/credentialerror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/credentialerror",
            "title" : "CredentialError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/authorizationcode",
                "title" : "case authorizationCode",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/devicecode",
                "title" : "case deviceCode",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/implicit",
                "title" : "case implicit",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/oob",
                "title" : "case oob",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/oobmfa",
                "title" : "case oobMFA",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/other(_:)",
                "title" : "case other(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/otp",
                "title" : "case otp",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/otpmfa",
                "title" : "case otpMFA",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/password",
                "title" : "case password",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/refreshtoken",
                "title" : "case refreshToken",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/tokenexchange",
                "title" : "case tokenExchange",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/webauthn",
                "title" : "case webAuthn",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/granttype\/webauthnmfa",
                "title" : "case webAuthnMFA",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/granttype\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/hashvalue",
                    "title" : "var hashValue: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/rawvalue-swift.property",
                    "title" : "var rawValue: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/hash(into:)",
                    "title" : "func hash(into: inout Hasher)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/granttype\/rawvalue-swift.typealias",
                    "title" : "GrantType.RawValue",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/granttype\/rawrepresentable-implementations",
                "title" : "RawRepresentable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/granttype",
            "title" : "GrantType",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/==(_:_:)",
                "title" : "static func == (JSONValue, JSONValue) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/array(_:)",
                "title" : "case array([JSONValue])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/bool(_:)",
                "title" : "case bool(Bool)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/dictionary(_:)",
                "title" : "case dictionary([String : JSONValue])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/null",
                "title" : "case null",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/number(_:)",
                "title" : "case number(Double)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/object(_:)",
                "title" : "case object(Any)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/string(_:)",
                "title" : "case string(String)",
                "type" : "case"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/init(_:)",
                "title" : "init(Any?) throws",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalue\/anyvalue",
                "title" : "var anyValue: Any?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonvalue\/debugdescription",
                    "title" : "var debugDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonvalue\/customdebugstringconvertible-implementations",
                "title" : "CustomDebugStringConvertible Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonvalue\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonvalue\/decodable-implementations",
                "title" : "Decodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonvalue\/encode(to:)",
                    "title" : "func encode(to: Encoder) throws",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonvalue\/encodable-implementations",
                "title" : "Encodable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonvalue\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonvalue\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jsonvalue",
            "title" : "JSONValue",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jsonvalueerror\/cannotdecode(value:)",
                "title" : "case cannotDecode(value: Any)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jsonvalueerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jsonvalueerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jsonvalueerror",
            "title" : "JSONValueError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/badtokenstructure",
                "title" : "case badTokenStructure",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/cannotcreatekey(code:description:)",
                "title" : "case cannotCreateKey(code: OSStatus, description: String?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/cannotgeneratehash",
                "title" : "case cannotGenerateHash",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/exceedsmaxage",
                "title" : "case exceedsMaxAge",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/expired",
                "title" : "case expired",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidaudience",
                "title" : "case invalidAudience",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidauthenticationtime",
                "title" : "case invalidAuthenticationTime",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidbase64encoding",
                "title" : "case invalidBase64Encoding",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidissuer",
                "title" : "case invalidIssuer",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidkey",
                "title" : "case invalidKey",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidsigningalgorithm",
                "title" : "case invalidSigningAlgorithm",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/invalidsubject",
                "title" : "case invalidSubject",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/issuedattimeexceedsgraceinterval",
                "title" : "case issuedAtTimeExceedsGraceInterval",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/issuerrequireshttps",
                "title" : "case issuerRequiresHTTPS",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/noncemismatch",
                "title" : "case nonceMismatch",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/signatureinvalid",
                "title" : "case signatureInvalid",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/signatureverificationunavailable",
                "title" : "case signatureVerificationUnavailable",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/jwterror\/unsupportedalgorithm(_:)",
                "title" : "case unsupportedAlgorithm(JWK.Algorithm)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwterror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwterror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/errordescription-1x2sk",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/errordescription-qyfk",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/jwterror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/jwterror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/jwterror",
            "title" : "JWTError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/accesscontrolinvalid(code:description:)",
                "title" : "case accessControlInvalid(code: OSStatus, description: String?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/cannotdelete(code:)",
                "title" : "case cannotDelete(code: OSStatus)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/cannotget(code:)",
                "title" : "case cannotGet(code: OSStatus)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/cannotlist(code:)",
                "title" : "case cannotList(code: OSStatus)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/cannotsave(code:)",
                "title" : "case cannotSave(code: OSStatus)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/cannotupdate(code:)",
                "title" : "case cannotUpdate(code: OSStatus)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/invalidaccessibilityoption",
                "title" : "case invalidAccessibilityOption",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/invalidformat",
                "title" : "case invalidFormat",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/missingaccount",
                "title" : "case missingAccount",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/missingattribute",
                "title" : "case missingAttribute",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/missingvaluedata",
                "title" : "case missingValueData",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/keychainerror\/notfound",
                "title" : "case notFound",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychainerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/errordescription-1617j",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/errordescription-8iygp",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/keychainerror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/keychainerror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/keychainerror",
            "title" : "KeychainError",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/cannotcomposeurl",
                "title" : "case cannotComposeUrl",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/cannotrevoke(type:)",
                "title" : "case cannotRevoke(type: Token.RevokeType)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/error(_:)",
                "title" : "case error(Error)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/invalidurl",
                "title" : "case invalidUrl",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/missingclientconfiguration",
                "title" : "case missingClientConfiguration",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/missinglocationheader",
                "title" : "case missingLocationHeader",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/missingoauth2responsekey(_:)",
                "title" : "case missingOAuth2ResponseKey(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/missingopenidconfiguration(attribute:)",
                "title" : "case missingOpenIdConfiguration(attribute: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/missingtoken(type:)",
                "title" : "case missingToken(type: Token.Kind)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/multiple(errors:)",
                "title" : "case multiple(errors: [OAuth2Error])",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/network(error:)",
                "title" : "case network(error: APIClientError)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/oauth2error(code:description:additionalkeys:)",
                "title" : "case oauth2Error(code: String, description: String?, additionalKeys: [String : String]?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/oauth2error\/signatureinvalid",
                "title" : "case signatureInvalid",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/==(_:_:)",
                    "title" : "static func == (OAuth2Error, OAuth2Error) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2error\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2error\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/errordescription-46l3j",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/errordescription-4kk0u",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/oauth2error\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/oauth2error\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/oauth2error",
            "title" : "OAuth2Error",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenerror\/cannotreplacetoken",
                "title" : "case cannotReplaceToken",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenerror\/contextmissing",
                "title" : "case contextMissing",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenerror\/duplicatetokenadded",
                "title" : "case duplicateTokenAdded",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenerror\/invalidconfiguration",
                "title" : "case invalidConfiguration",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/authfoundation\/tokenerror\/tokennotfound(id:)",
                "title" : "case tokenNotFound(id: String)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokenerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/errordescription-53vi5",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/errordescription-6tyc7",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/authfoundation\/tokenerror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/authfoundation\/tokenerror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/authfoundation\/tokenerror",
            "title" : "TokenError",
            "type" : "enum"
          }
        ],
        "path" : "\/documentation\/authfoundation",
        "title" : "AuthFoundation",
        "type" : "module"
      },
      {
        "children" : [
          {
            "title" : "Essentials",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Essentials",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/start(options:)",
                "title" : "func start(options: [Option : Any]?) async throws -> Response",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/resume()",
                "title" : "func resume() async throws -> Response",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/exchangecode(redirect:)",
                "title" : "func exchangeCode(redirect: URL) async throws -> Token",
                "type" : "method"
              },
              {
                "title" : "Completion Block Functions",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/start(options:completion:)",
                "title" : "func start(options: [Option : Any]?, completion: ResponseResult)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/resume(completion:)",
                "title" : "func resume(completion: ResponseResult?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/exchangecode(redirect:completion:)",
                "title" : "func exchangeCode(redirect: URL, completion: TokenResult?)",
                "type" : "method"
              },
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/context-swift.struct\/init(from:)",
                    "title" : "init(from: Decoder) throws",
                    "type" : "init"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/context-swift.struct\/init(interactionhandle:state:)",
                    "title" : "init(interactionHandle: String, state: String?) throws",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/context-swift.struct\/interactionhandle",
                    "title" : "let interactionHandle: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/context-swift.struct\/pkce",
                    "title" : "let pkce: PKCE",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/context-swift.struct\/state",
                    "title" : "let state: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/interactioncodeflow\/context-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/context-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/context-swift.struct",
                "title" : "InteractionCodeFlow.Context",
                "type" : "struct"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/init()",
                "title" : "init() throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/init(issuer:clientid:scopes:redirecturi:additionalparameters:deviceidentifier:)",
                "title" : "init(issuer: URL, clientId: String, scopes: String, redirectUri: URL, additionalParameters: [String : String]?, deviceIdentifier: UUID?)",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/init(plist:)",
                "title" : "init(plist: URL) throws",
                "type" : "init"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/init(redirecturi:additionalparameters:deviceidentifier:client:)",
                "title" : "init(redirectUri: URL, additionalParameters: [String : String]?, deviceIdentifier: UUID?, client: OAuth2Client)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/additionalparameters",
                "title" : "let additionalParameters: [String : String]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/client",
                "title" : "let client: OAuth2Client",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/context-swift.property",
                "title" : "var context: Context?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/delegatecollection",
                "title" : "let delegateCollection: DelegateCollection<InteractionCodeFlowDelegate>",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/deviceidentifier",
                "title" : "let deviceIdentifier: UUID?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/isauthenticating",
                "title" : "var isAuthenticating: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/options",
                "title" : "var options: [Option : Any]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/redirecturi",
                "title" : "let redirectUri: URL",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/cancel()",
                "title" : "func cancel()",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/redirectresult(for:)",
                "title" : "func redirectResult(for: URL) -> RedirectResult",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/reset()",
                "title" : "func reset()",
                "type" : "method"
              },
              {
                "title" : "Type Aliases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/responseresult",
                "title" : "InteractionCodeFlow.ResponseResult",
                "type" : "typealias"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/tokenresult",
                "title" : "InteractionCodeFlow.TokenResult",
                "type" : "typealias"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/option\/omitdevicetoken",
                    "title" : "case omitDeviceToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/option\/recoverytoken",
                    "title" : "case recoveryToken",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/option\/state",
                    "title" : "case state",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/option\/init(rawvalue:)",
                    "title" : "init?(rawValue: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/interactioncodeflow\/option\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/option\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/interactioncodeflow\/option\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/interactioncodeflow\/option\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/option\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/option",
                "title" : "InteractionCodeFlow.Option",
                "type" : "enum"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/redirectresult\/authenticated",
                    "title" : "case authenticated",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/redirectresult\/invalidcontext",
                    "title" : "case invalidContext",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/redirectresult\/invalidredirecturl",
                    "title" : "case invalidRedirectUrl",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/redirectresult\/remediationrequired",
                    "title" : "case remediationRequired",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/interactioncodeflow\/redirectresult\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/redirectresult\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/redirectresult",
                "title" : "InteractionCodeFlow.RedirectResult",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/api(client:didsend:received:)",
                    "title" : "func api(client: APIClient, didSend: URLRequest, received: HTTPURLResponse)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/api(client:didsend:received:requestid:ratelimit:)",
                    "title" : "func api(client: APIClient, didSend: URLRequest, received: APIClientError, requestId: String?, rateLimit: APIRateLimit?)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/api(client:shouldretry:)",
                    "title" : "func api(client: APIClient, shouldRetry: URLRequest) -> APIRetry",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/api(client:willsend:)",
                    "title" : "func api(client: APIClient, willSend: inout URLRequest)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/apiclientdelegate-implementations",
                "title" : "APIClientDelegate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/oauth(client:didrefresh:replacedwith:)",
                    "title" : "func oauth(client: OAuth2Client, didRefresh: Token, replacedWith: Token?)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/oauth(client:willrefresh:)",
                    "title" : "func oauth(client: OAuth2Client, willRefresh: Token)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/oauth2clientdelegate-implementations",
                "title" : "OAuth2ClientDelegate Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/add(delegate:)",
                    "title" : "func add(delegate: Self.Delegate)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/remove(delegate:)",
                    "title" : "func remove(delegate: Self.Delegate)",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflow\/delegate",
                    "title" : "InteractionCodeFlow.Delegate",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/interactioncodeflow\/usesdelegatecollection-implementations",
                "title" : "UsesDelegateCollection Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/interactioncodeflow",
            "title" : "InteractionCodeFlow",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowdelegate\/authentication(flow:received:)-37qdd",
                "title" : "func authentication<Flow>(flow: Flow, received: Response)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowdelegate\/authentication(flow:received:)-38ps0",
                "title" : "func authentication<Flow>(flow: Flow, received: Token)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowdelegate\/authentication(flow:received:)-70tl6",
                "title" : "func authentication<Flow>(flow: Flow, received: InteractionCodeFlowError)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowdelegate\/authenticationfinished(flow:)",
                "title" : "func authenticationFinished<Flow>(flow: Flow)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowdelegate\/authenticationstarted(flow:)",
                "title" : "func authenticationStarted<Flow>(flow: Flow)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/oktaidx\/interactioncodeflowdelegate",
            "title" : "InteractionCodeFlowDelegate",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/app",
                "title" : "let app: Application?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/authenticators",
                "title" : "let authenticators: Authenticator.Collection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/cancancel",
                "title" : "let canCancel: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/expiresat",
                "title" : "let expiresAt: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/intent-swift.property",
                "title" : "let intent: Intent",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/isloginsuccessful",
                "title" : "let isLoginSuccessful: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/messages",
                "title" : "let messages: Response.Message.Collection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/remediations",
                "title" : "let remediations: Remediation.Collection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/user-swift.property",
                "title" : "let user: User?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/cancel()",
                "title" : "func cancel() async throws -> Response",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/cancel(completion:)",
                "title" : "func cancel(completion: InteractionCodeFlow.ResponseResult?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/exchangecode()",
                "title" : "func exchangeCode() async throws -> Token",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/exchangecode(completion:)",
                "title" : "func exchangeCode(completion: InteractionCodeFlow.TokenResult?)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/credentialenrollment",
                    "title" : "case credentialEnrollment",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/credentialmodify",
                    "title" : "case credentialModify",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/credentialrecovery",
                    "title" : "case credentialRecovery",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/credentialunenrollment",
                    "title" : "case credentialUnenrollment",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/enrollnewuser",
                    "title" : "case enrollNewUser",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/login",
                    "title" : "case login",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/unknown",
                    "title" : "case unknown",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/init(string:)",
                    "title" : "init(string: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum",
                "title" : "Response.Intent",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/oktaidx\/response",
            "title" : "Response",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/collection\/subscript(_:)-319h",
                    "title" : "subscript(String) -> Remediation?",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/collection\/subscript(_:)-56ryu",
                    "title" : "subscript(Remediation.RemediationType) -> Remediation?",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/count",
                        "title" : "var count: Int",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/endindex",
                        "title" : "var endIndex: Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/first",
                        "title" : "var first: Self.Element?",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/indices",
                        "title" : "var indices: DefaultIndices<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/isempty",
                        "title" : "var isEmpty: Bool",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/startindex",
                        "title" : "var startIndex: Index",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/underestimatedcount-3jcwb",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/distance(from:to:)",
                        "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/droplast(_:)",
                        "title" : "func dropLast(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/firstindex(of:)",
                        "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/firstindex(where:)",
                        "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/firstrange(of:)",
                        "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/formindex(_:offsetby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/formindex(_:offsetby:limitedby:)",
                        "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/formindex(after:)",
                        "title" : "func formIndex(after: inout Self.Index)",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/index(_:offsetby:)",
                        "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/index(_:offsetby:limitedby:)",
                        "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/index(after:)",
                        "title" : "func index(after: Index) -> Index",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/index(of:)",
                        "title" : "func index(of: Self.Element) -> Self.Index?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/makeiterator()",
                        "title" : "func makeIterator() -> IndexingIterator<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/map(_:)-8nw2r",
                        "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/prefix(_:)",
                        "title" : "func prefix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/prefix(through:)",
                        "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/prefix(upto:)",
                        "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/randomelement()",
                        "title" : "func randomElement() -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/randomelement(using:)",
                        "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/ranges(of:)",
                        "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                        "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/split(separator:maxsplits:omittingemptysubsequences:)",
                        "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/suffix(_:)",
                        "title" : "func suffix(Int) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/suffix(from:)",
                        "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/trimmingprefix(_:)",
                        "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/trimmingprefix(while:)",
                        "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                        "type" : "method"
                      },
                      {
                        "title" : "Subscripts",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/subscript(_:)-5n5ht",
                        "title" : "subscript(Index) -> Element",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/subscript(_:)-6f1ac",
                        "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/subscript(_:)-91qsx",
                        "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/subscript(_:)-c3c1",
                        "title" : "subscript<R>(R) -> Self.SubSequence",
                        "type" : "subscript"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/index",
                        "title" : "Remediation.Collection.Index",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/remediation\/collection\/collection-implementations",
                    "title" : "Collection Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/lazy",
                        "title" : "var lazy: LazySequence<Self>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/publisher",
                        "title" : "var publisher: Publishers.Sequence<Self, Never>",
                        "type" : "property"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/underestimatedcount-6qzhp",
                        "title" : "var underestimatedCount: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/compactmap(_:)",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/compare(_:_:)",
                        "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/contains(_:)",
                        "title" : "func contains(Self.Element) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/elementsequal(_:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/elementsequal(_:by:)",
                        "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/enumerated()",
                        "title" : "func enumerated() -> EnumeratedSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/filter(_:)",
                        "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/first(where:)",
                        "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/flatmap(_:)-2bc9s",
                        "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/flatmap(_:)-6ou0k",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/foreach(_:)",
                        "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/formatted(_:)",
                        "title" : "func formatted<S>(S) -> S.FormatOutput",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/lexicographicallyprecedes(_:by:)",
                        "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/map(_:)-9hg4k",
                        "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/reversed()",
                        "title" : "func reversed() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/shuffled()",
                        "title" : "func shuffled() -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/shuffled(using:)",
                        "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/sorted(by:)",
                        "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/sorted(using:)-3sggy",
                        "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/sorted(using:)-5hwpa",
                        "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/starts(with:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/starts(with:by:)",
                        "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/withcontiguousstorageifavailable(_:)",
                        "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                        "type" : "method"
                      },
                      {
                        "title" : "Type Aliases",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/collection\/element",
                        "title" : "Remediation.Collection.Element",
                        "type" : "typealias"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/remediation\/collection\/sequence-implementations",
                    "title" : "Sequence Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/remediation\/collection",
                "title" : "Remediation.Collection",
                "type" : "class"
              },
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/==(_:_:)",
                "title" : "static func == (Remediation, Remediation) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/authenticators",
                "title" : "var authenticators: Authenticator.Collection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/capabilities",
                "title" : "let capabilities: [RemediationCapability]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.property",
                "title" : "let form: Form",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/messages",
                "title" : "var messages: Response.Message.Collection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/name",
                "title" : "let name: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/pollable",
                "title" : "var pollable: Capability.Pollable?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/socialidp",
                "title" : "var socialIdp: Capability.SocialIDP?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/type",
                "title" : "let type: RemediationType",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/proceed()",
                "title" : "func proceed() async throws -> Response",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/proceed(completion:)",
                "title" : "func proceed(completion: InteractionCodeFlow.ResponseResult?)",
                "type" : "method"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/subscript(_:)",
                "title" : "subscript(String) -> Form.Field?",
                "type" : "subscript"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/adminconsent",
                    "title" : "case adminConsent",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/authenticatorenrollmentdata",
                    "title" : "case authenticatorEnrollmentData",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/authenticatorverificationdata",
                    "title" : "case authenticatorVerificationData",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/cancel",
                    "title" : "case cancel",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/cancelpolling",
                    "title" : "case cancelPolling",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/canceltransaction",
                    "title" : "case cancelTransaction",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/challengeauthenticator",
                    "title" : "case challengeAuthenticator",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/challengepoll",
                    "title" : "case challengePoll",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/consent",
                    "title" : "case consent",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/deviceapplessoextension",
                    "title" : "case deviceAppleSsoExtension",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/devicechallengepoll",
                    "title" : "case deviceChallengePoll",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/emailchallengeconsent",
                    "title" : "case emailChallengeConsent",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/enrollauthenticator",
                    "title" : "case enrollAuthenticator",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/enrollpoll",
                    "title" : "case enrollPoll",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/enrollprofile",
                    "title" : "case enrollProfile",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/enrollmentchanneldata",
                    "title" : "case enrollmentChannelData",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/identify",
                    "title" : "case identify",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/identifyrecovery",
                    "title" : "case identifyRecovery",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/launchauthenticator",
                    "title" : "case launchAuthenticator",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/poll",
                    "title" : "case poll",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/recover",
                    "title" : "case recover",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/redirectidp",
                    "title" : "case redirectIdp",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/reenrollauthenticator",
                    "title" : "case reenrollAuthenticator",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/reenrollauthenticatorwarning",
                    "title" : "case reenrollAuthenticatorWarning",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/requestactivationemail",
                    "title" : "case requestActivationEmail",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/resend",
                    "title" : "case resend",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/resendchallenge",
                    "title" : "case resendChallenge",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/resetauthenticator",
                    "title" : "case resetAuthenticator",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/selectauthenticatorauthenticate",
                    "title" : "case selectAuthenticatorAuthenticate",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/selectauthenticatorenroll",
                    "title" : "case selectAuthenticatorEnroll",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/selectauthenticatorunlockaccount",
                    "title" : "case selectAuthenticatorUnlockAccount",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/selectenrollprofile",
                    "title" : "case selectEnrollProfile",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/selectenrollmentchannel",
                    "title" : "case selectEnrollmentChannel",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/selectidentify",
                    "title" : "case selectIdentify",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/send",
                    "title" : "case send",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/sendchallenge",
                    "title" : "case sendChallenge",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/skip",
                    "title" : "case skip",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/unknown",
                    "title" : "case unknown",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/unlockaccount",
                    "title" : "case unlockAccount",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/usercode",
                    "title" : "case userCode",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/remediation\/remediationtype\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/remediation\/remediationtype",
                "title" : "Remediation.RemediationType",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/capability(_:)",
                    "title" : "func capability<T>(T.Type) -> T?",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/capabilitytype",
                    "title" : "Remediation.CapabilityType",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/remediation\/capabilitycollection-implementations",
                "title" : "CapabilityCollection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/remediation\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/remediation",
            "title" : "Remediation",
            "type" : "class"
          },
          {
            "title" : "Forms and Fields",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/fields",
                "title" : "let fields: [Field]",
                "type" : "property"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/subscript(_:)-6l1ji",
                "title" : "subscript(String) -> Field?",
                "type" : "subscript"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/subscript(_:)-8cdmz",
                "title" : "subscript(Int) -> Field?",
                "type" : "subscript"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/endindex",
                    "title" : "var endIndex: Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/first",
                    "title" : "var first: Self.Element?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/indices",
                    "title" : "var indices: DefaultIndices<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/startindex",
                    "title" : "var startIndex: Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/underestimatedcount-5ki6",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/distance(from:to:)",
                    "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/drop(while:)",
                    "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/dropfirst(_:)",
                    "title" : "func dropFirst(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/droplast(_:)",
                    "title" : "func dropLast(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/firstindex(of:)",
                    "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/firstindex(where:)",
                    "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/firstrange(of:)",
                    "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/formindex(_:offsetby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/formindex(_:offsetby:limitedby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/formindex(after:)",
                    "title" : "func formIndex(after: inout Self.Index)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/index(_:offsetby:)",
                    "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/index(_:offsetby:limitedby:)",
                    "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/index(after:)",
                    "title" : "func index(after: Index) -> Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/index(of:)",
                    "title" : "func index(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/makeiterator()",
                    "title" : "func makeIterator() -> IndexingIterator<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/map(_:)-1blvv",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/prefix(_:)",
                    "title" : "func prefix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/prefix(through:)",
                    "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/prefix(upto:)",
                    "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/prefix(while:)",
                    "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/randomelement()",
                    "title" : "func randomElement() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/randomelement(using:)",
                    "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/ranges(of:)",
                    "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/split(separator:maxsplits:omittingemptysubsequences:)",
                    "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/suffix(_:)",
                    "title" : "func suffix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/suffix(from:)",
                    "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/trimmingprefix(_:)",
                    "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/trimmingprefix(while:)",
                    "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/subscript(_:)-4f8g5",
                    "title" : "subscript<R>(R) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/subscript(_:)-7xd5j",
                    "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/subscript(_:)-ii7e",
                    "title" : "subscript(Index) -> Element",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/subscript(_:)-vl01",
                    "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/index",
                    "title" : "Remediation.Form.Index",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/collection-implementations",
                "title" : "Collection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/lazy",
                    "title" : "var lazy: LazySequence<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/publisher",
                    "title" : "var publisher: Publishers.Sequence<Self, Never>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/underestimatedcount-6a1kz",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/allsatisfy(_:)",
                    "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/compactmap(_:)",
                    "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/compare(_:_:)",
                    "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/contains(_:)",
                    "title" : "func contains(Self.Element) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/contains(where:)",
                    "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/elementsequal(_:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/elementsequal(_:by:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/enumerated()",
                    "title" : "func enumerated() -> EnumeratedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/filter(_:)",
                    "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/first(where:)",
                    "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/flatmap(_:)-3rm4x",
                    "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/flatmap(_:)-4sikf",
                    "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/foreach(_:)",
                    "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/formatted(_:)",
                    "title" : "func formatted<S>(S) -> S.FormatOutput",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/lexicographicallyprecedes(_:by:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/map(_:)-5jj6s",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/max(by:)",
                    "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/min(by:)",
                    "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/reduce(_:_:)",
                    "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/reduce(into:_:)",
                    "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/reversed()",
                    "title" : "func reversed() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/shuffled()",
                    "title" : "func shuffled() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/shuffled(using:)",
                    "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/sorted(by:)",
                    "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/sorted(using:)-68jsj",
                    "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/sorted(using:)-697y4",
                    "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/starts(with:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/starts(with:by:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/withcontiguousstorageifavailable(_:)",
                    "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/element",
                    "title" : "Remediation.Form.Element",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/sequence-implementations",
                "title" : "Sequence Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class",
            "title" : "Remediation.Form",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/authenticator",
                "title" : "var authenticator: Authenticator?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/form",
                "title" : "let form: Remediation.Form?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/ismutable",
                "title" : "let isMutable: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/isrequired",
                "title" : "let isRequired: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/issecret",
                "title" : "let isSecret: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/isselectedoption",
                "title" : "var isSelectedOption: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/label",
                "title" : "let label: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/messages",
                "title" : "let messages: Response.Message.Collection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/name",
                "title" : "let name: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/options",
                "title" : "let options: [Remediation.Form.Field]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/selectedoption",
                "title" : "var selectedOption: Remediation.Form.Field?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/type",
                "title" : "let type: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/value",
                "title" : "var value: APIRequestArgument?",
                "type" : "property"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field\/subscript(_:)",
                "title" : "subscript(String) -> Field?",
                "type" : "subscript"
              }
            ],
            "path" : "\/documentation\/oktaidx\/remediation\/form-swift.class\/field",
            "title" : "Remediation.Form.Field",
            "type" : "class"
          },
          {
            "title" : "Working with Authenticators",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/==(_:_:)",
                "title" : "static func == (Authenticator, Authenticator) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/capabilities",
                "title" : "let capabilities: [AuthenticatorCapability]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/displayname",
                "title" : "let displayName: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/duo",
                "title" : "var duo: Capability.Duo?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/id",
                "title" : "let id: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/key",
                "title" : "let key: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/methods",
                "title" : "let methods: [Method]?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/numberchallenge",
                "title" : "var numberChallenge: Capability.NumberChallenge?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/otp",
                "title" : "var otp: Capability.OTP?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/passwordsettings",
                "title" : "var passwordSettings: Capability.PasswordSettings?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/pollable",
                "title" : "var pollable: Capability.Pollable?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/profile",
                "title" : "var profile: Capability.Profile?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/recoverable",
                "title" : "var recoverable: Capability.Recoverable?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/resendable",
                "title" : "var resendable: Capability.Resendable?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/sendable",
                "title" : "var sendable: Capability.Sendable?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.property",
                "title" : "let state: State",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/type",
                "title" : "let type: Kind",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/capability(_:)",
                    "title" : "func capability<T>(T.Type) -> T?",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/capabilitytype",
                    "title" : "Authenticator.CapabilityType",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/authenticator\/capabilitycollection-implementations",
                "title" : "CapabilityCollection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/authenticator\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/authenticator",
            "title" : "Authenticator",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/collection\/current",
                "title" : "var current: Authenticator?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/collection\/enrolled",
                "title" : "var enrolled: [Authenticator]",
                "type" : "property"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/collection\/subscript(_:)-qp7f",
                "title" : "subscript(Authenticator.Kind) -> Authenticator?",
                "type" : "subscript"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/endindex",
                    "title" : "var endIndex: Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/first",
                    "title" : "var first: Self.Element?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/indices",
                    "title" : "var indices: DefaultIndices<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/startindex",
                    "title" : "var startIndex: Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/underestimatedcount-52asi",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/distance(from:to:)",
                    "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/drop(while:)",
                    "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/dropfirst(_:)",
                    "title" : "func dropFirst(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/droplast(_:)",
                    "title" : "func dropLast(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/firstindex(of:)",
                    "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/firstindex(where:)",
                    "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/firstrange(of:)",
                    "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/formindex(_:offsetby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/formindex(_:offsetby:limitedby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/formindex(after:)",
                    "title" : "func formIndex(after: inout Self.Index)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/index(_:offsetby:)",
                    "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/index(_:offsetby:limitedby:)",
                    "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/index(after:)",
                    "title" : "func index(after: Index) -> Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/index(of:)",
                    "title" : "func index(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/makeiterator()",
                    "title" : "func makeIterator() -> IndexingIterator<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/map(_:)-6mfq1",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/prefix(_:)",
                    "title" : "func prefix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/prefix(through:)",
                    "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/prefix(upto:)",
                    "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/prefix(while:)",
                    "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/randomelement()",
                    "title" : "func randomElement() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/randomelement(using:)",
                    "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/ranges(of:)",
                    "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/split(separator:maxsplits:omittingemptysubsequences:)",
                    "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/suffix(_:)",
                    "title" : "func suffix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/suffix(from:)",
                    "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/trimmingprefix(_:)",
                    "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/trimmingprefix(while:)",
                    "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/subscript(_:)-26ces",
                    "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/subscript(_:)-45ozl",
                    "title" : "subscript(Index) -> Element",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/subscript(_:)-8f08e",
                    "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/subscript(_:)-8wmn2",
                    "title" : "subscript<R>(R) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/index",
                    "title" : "Authenticator.Collection.Index",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/authenticator\/collection\/collection-implementations",
                "title" : "Collection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/lazy",
                    "title" : "var lazy: LazySequence<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/publisher",
                    "title" : "var publisher: Publishers.Sequence<Self, Never>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/underestimatedcount-2mk29",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/allsatisfy(_:)",
                    "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/compactmap(_:)",
                    "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/compare(_:_:)",
                    "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/contains(_:)",
                    "title" : "func contains(Self.Element) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/contains(where:)",
                    "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/elementsequal(_:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/elementsequal(_:by:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/enumerated()",
                    "title" : "func enumerated() -> EnumeratedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/filter(_:)",
                    "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/first(where:)",
                    "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/flatmap(_:)-1p7bl",
                    "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/flatmap(_:)-8xhjv",
                    "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/foreach(_:)",
                    "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/formatted(_:)",
                    "title" : "func formatted<S>(S) -> S.FormatOutput",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/lexicographicallyprecedes(_:by:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/map(_:)-1bhli",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/max(by:)",
                    "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/min(by:)",
                    "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/reduce(_:_:)",
                    "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/reduce(into:_:)",
                    "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/reversed()",
                    "title" : "func reversed() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/shuffled()",
                    "title" : "func shuffled() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/shuffled(using:)",
                    "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/sorted(by:)",
                    "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/sorted(using:)-48ucc",
                    "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/sorted(using:)-60ee6",
                    "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/starts(with:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/starts(with:by:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/withcontiguousstorageifavailable(_:)",
                    "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/collection\/element",
                    "title" : "Authenticator.Collection.Element",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/authenticator\/collection\/sequence-implementations",
                "title" : "Sequence Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/authenticator\/collection",
            "title" : "Authenticator.Collection",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/kind\/app",
                "title" : "case app",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/kind\/device",
                "title" : "case device",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/kind\/email",
                "title" : "case email",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/kind\/federated",
                "title" : "case federated",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/kind\/password",
                "title" : "case password",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/kind\/phone",
                "title" : "case phone",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/kind\/securitykey",
                "title" : "case securityKey",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/kind\/securityquestion",
                "title" : "case securityQuestion",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/kind\/unknown",
                "title" : "case unknown",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/kind\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/authenticator\/kind\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/authenticator\/kind",
            "title" : "Authenticator.Kind",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/duo",
                "title" : "case duo",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/email",
                "title" : "case email",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/federated",
                "title" : "case federated",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/idp",
                "title" : "case idp",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/otp",
                "title" : "case otp",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/password",
                "title" : "case password",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/push",
                "title" : "case push",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/securityquestion",
                "title" : "case securityQuestion",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/signednonce",
                "title" : "case signedNonce",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/sms",
                "title" : "case sms",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/totp",
                "title" : "case totp",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/unknown",
                "title" : "case unknown",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/voice",
                "title" : "case voice",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/webauthn",
                "title" : "case webAuthN",
                "type" : "case"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/stringvalue",
                "title" : "var stringValue: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/method\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/authenticator\/method\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/authenticator\/method",
            "title" : "Authenticator.Method",
            "type" : "enum"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/authenticating",
                "title" : "case authenticating",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/enrolled",
                "title" : "case enrolled",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/enrolling",
                "title" : "case enrolling",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/normal",
                "title" : "case normal",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/recovery",
                "title" : "case recovery",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/'...(_:)-27cmt",
                    "title" : "static func ... (Self) -> PartialRangeThrough<Self>",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/'...(_:)-359xw",
                    "title" : "static func ... (Self) -> PartialRangeFrom<Self>",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/'...(_:_:)",
                    "title" : "static func ... (Self, Self) -> ClosedRange<Self>",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/'.._(_:)",
                    "title" : "static func ..< (Self) -> PartialRangeUpTo<Self>",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/'.._(_:_:)",
                    "title" : "static func ..< (Self, Self) -> Range<Self>",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/_(_:_:)",
                    "title" : "static func > (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/_=(_:_:)-89np0",
                    "title" : "static func >= (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/_=(_:_:)-8lap2",
                    "title" : "static func <= (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/comparable-implementations",
                "title" : "Comparable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/authenticator\/state-swift.enum",
            "title" : "Authenticator.State",
            "type" : "enum"
          },
          {
            "title" : "Working with Responses",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/app",
                "title" : "let app: Application?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/authenticators",
                "title" : "let authenticators: Authenticator.Collection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/cancancel",
                "title" : "let canCancel: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/expiresat",
                "title" : "let expiresAt: Date?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/intent-swift.property",
                "title" : "let intent: Intent",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/isloginsuccessful",
                "title" : "let isLoginSuccessful: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/messages",
                "title" : "let messages: Response.Message.Collection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/remediations",
                "title" : "let remediations: Remediation.Collection",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/user-swift.property",
                "title" : "let user: User?",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/cancel()",
                "title" : "func cancel() async throws -> Response",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/cancel(completion:)",
                "title" : "func cancel(completion: InteractionCodeFlow.ResponseResult?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/exchangecode()",
                "title" : "func exchangeCode() async throws -> Token",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/exchangecode(completion:)",
                "title" : "func exchangeCode(completion: InteractionCodeFlow.TokenResult?)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/credentialenrollment",
                    "title" : "case credentialEnrollment",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/credentialmodify",
                    "title" : "case credentialModify",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/credentialrecovery",
                    "title" : "case credentialRecovery",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/credentialunenrollment",
                    "title" : "case credentialUnenrollment",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/enrollnewuser",
                    "title" : "case enrollNewUser",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/login",
                    "title" : "case login",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/unknown",
                    "title" : "case unknown",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/init(string:)",
                    "title" : "init(string: String?)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/response\/intent-swift.enum",
                "title" : "Response.Intent",
                "type" : "enum"
              }
            ],
            "path" : "\/documentation\/oktaidx\/response",
            "title" : "Response",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/==(_:_:)",
                "title" : "static func == (Response.Message, Response.Message) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/field",
                "title" : "var field: Remediation.Form.Field?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/localizationkey",
                "title" : "let localizationKey: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/message",
                "title" : "let message: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/type",
                "title" : "let type: Severity",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/severity\/error",
                    "title" : "case error",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/severity\/info",
                    "title" : "case info",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/severity\/unknown",
                    "title" : "case unknown",
                    "type" : "case"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/response\/message\/severity\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/response\/message\/severity\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/response\/message\/severity",
                "title" : "Response.Message.Severity",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/response\/message\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/response\/message",
            "title" : "Response.Message",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/collection\/==(_:_:)",
                "title" : "static func == (Collection, Collection) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/collection\/allmessages",
                "title" : "var allMessages: [Response.Message]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/collection\/hash(into:)",
                "title" : "func hash(into: inout Hasher)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/collection\/message(for:)-5p58e",
                "title" : "func message(for: String) -> Response.Message?",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/message\/collection\/message(for:)-9kg5a",
                "title" : "func message(for: Remediation.Form.Field) -> Response.Message?",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/count",
                    "title" : "var count: Int",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/endindex",
                    "title" : "var endIndex: Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/first",
                    "title" : "var first: Self.Element?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/indices",
                    "title" : "var indices: DefaultIndices<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/isempty",
                    "title" : "var isEmpty: Bool",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/startindex",
                    "title" : "var startIndex: Index",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/underestimatedcount-3glvi",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/distance(from:to:)",
                    "title" : "func distance(from: Self.Index, to: Self.Index) -> Int",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/drop(while:)",
                    "title" : "func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/dropfirst(_:)",
                    "title" : "func dropFirst(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/droplast(_:)",
                    "title" : "func dropLast(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/firstindex(of:)",
                    "title" : "func firstIndex(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/firstindex(where:)",
                    "title" : "func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/firstrange(of:)",
                    "title" : "func firstRange<C>(of: C) -> Range<Self.Index>?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/formindex(_:offsetby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/formindex(_:offsetby:limitedby:)",
                    "title" : "func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/formindex(after:)",
                    "title" : "func formIndex(after: inout Self.Index)",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/index(_:offsetby:)",
                    "title" : "func index(Self.Index, offsetBy: Int) -> Self.Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/index(_:offsetby:limitedby:)",
                    "title" : "func index(Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/index(after:)",
                    "title" : "func index(after: Index) -> Index",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/index(of:)",
                    "title" : "func index(of: Self.Element) -> Self.Index?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/makeiterator()",
                    "title" : "func makeIterator() -> IndexingIterator<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/map(_:)-7m0du",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/prefix(_:)",
                    "title" : "func prefix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/prefix(through:)",
                    "title" : "func prefix(through: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/prefix(upto:)",
                    "title" : "func prefix(upTo: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/prefix(while:)",
                    "title" : "func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/randomelement()",
                    "title" : "func randomElement() -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/randomelement(using:)",
                    "title" : "func randomElement<T>(using: inout T) -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/ranges(of:)",
                    "title" : "func ranges<C>(of: C) -> [Range<Self.Index>]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/split(maxsplits:omittingemptysubsequences:whereseparator:)",
                    "title" : "func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/split(separator:maxsplits:omittingemptysubsequences:)",
                    "title" : "func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/suffix(_:)",
                    "title" : "func suffix(Int) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/suffix(from:)",
                    "title" : "func suffix(from: Self.Index) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/trimmingprefix(_:)",
                    "title" : "func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/trimmingprefix(while:)",
                    "title" : "func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence",
                    "type" : "method"
                  },
                  {
                    "title" : "Subscripts",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/subscript(_:)-5u38j",
                    "title" : "subscript(Index) -> Element",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/subscript(_:)-77thl",
                    "title" : "subscript<R>(R) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/subscript(_:)-7lpim",
                    "title" : "subscript(Range<Self.Index>) -> Slice<Self>",
                    "type" : "subscript"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/subscript(_:)-b7uq",
                    "title" : "subscript((UnboundedRange_) -> ()) -> Self.SubSequence",
                    "type" : "subscript"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/index",
                    "title" : "Response.Message.Collection.Index",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/response\/message\/collection\/collection-implementations",
                "title" : "Collection Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/response\/message\/collection\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/lazy",
                    "title" : "var lazy: LazySequence<Self>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/publisher",
                    "title" : "var publisher: Publishers.Sequence<Self, Never>",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/underestimatedcount-4rd3u",
                    "title" : "var underestimatedCount: Int",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/allsatisfy(_:)",
                    "title" : "func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/compactmap(_:)",
                    "title" : "func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/compare(_:_:)",
                    "title" : "func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/contains(_:)",
                    "title" : "func contains(Self.Element) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/contains(where:)",
                    "title" : "func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/elementsequal(_:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/elementsequal(_:by:)",
                    "title" : "func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/enumerated()",
                    "title" : "func enumerated() -> EnumeratedSequence<Self>",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/filter(_:)",
                    "title" : "func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/first(where:)",
                    "title" : "func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/flatmap(_:)-3vt45",
                    "title" : "func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/flatmap(_:)-6jrtz",
                    "title" : "func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/foreach(_:)",
                    "title" : "func forEach((Self.Element) throws -> Void) rethrows",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/formatted(_:)",
                    "title" : "func formatted<S>(S) -> S.FormatOutput",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/lexicographicallyprecedes(_:by:)",
                    "title" : "func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/map(_:)-2xq0t",
                    "title" : "func map<T>((Self.Element) throws -> T) rethrows -> [T]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/max(by:)",
                    "title" : "func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/min(by:)",
                    "title" : "func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/reduce(_:_:)",
                    "title" : "func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/reduce(into:_:)",
                    "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/reversed()",
                    "title" : "func reversed() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/shuffled()",
                    "title" : "func shuffled() -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/shuffled(using:)",
                    "title" : "func shuffled<T>(using: inout T) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/sorted(by:)",
                    "title" : "func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/sorted(using:)-81u2j",
                    "title" : "func sorted<Comparator>(using: Comparator) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/sorted(using:)-8o2xz",
                    "title" : "func sorted<S, Comparator>(using: S) -> [Self.Element]",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/starts(with:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/starts(with:by:)",
                    "title" : "func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool",
                    "type" : "method"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/withcontiguousstorageifavailable(_:)",
                    "title" : "func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/message\/collection\/element",
                    "title" : "Response.Message.Collection.Element",
                    "type" : "typealias"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/response\/message\/collection\/sequence-implementations",
                "title" : "Sequence Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/response\/message\/collection",
            "title" : "Response.Message.Collection",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/application\/id",
                "title" : "let id: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/application\/label",
                "title" : "let label: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/application\/name",
                "title" : "let name: String",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/oktaidx\/response\/application",
            "title" : "Response.Application",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/user-swift.struct\/profile-swift.struct\/firstname",
                    "title" : "let firstName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/user-swift.struct\/profile-swift.struct\/lastname",
                    "title" : "let lastName: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/user-swift.struct\/profile-swift.struct\/locale",
                    "title" : "let locale: Locale?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/response\/user-swift.struct\/profile-swift.struct\/timezone",
                    "title" : "let timeZone: TimeZone?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/response\/user-swift.struct\/profile-swift.struct",
                "title" : "Response.User.Profile",
                "type" : "struct"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/user-swift.struct\/id",
                "title" : "let id: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/user-swift.struct\/profile-swift.property",
                "title" : "let profile: Profile?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/response\/user-swift.struct\/username",
                "title" : "let username: String?",
                "type" : "property"
              }
            ],
            "path" : "\/documentation\/oktaidx\/response\/user-swift.struct",
            "title" : "Response.User",
            "type" : "struct"
          },
          {
            "title" : "Using Capabilities",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Classes",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/duo\/host",
                    "title" : "let host: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/duo\/script",
                    "title" : "let script: String",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/duo\/signaturedata",
                    "title" : "var signatureData: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/duo\/signedtoken",
                    "title" : "let signedToken: String",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/duo\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/duo",
                "title" : "Capability.Duo",
                "type" : "class"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capability",
            "title" : "Capability",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Associated Types",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capabilitycollection\/capabilitytype",
                "title" : "CapabilityType",
                "type" : "associatedtype"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capabilitycollection\/capabilities",
                "title" : "var capabilities: [CapabilityType]",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/oktaidx\/capabilitycollection\/capability(_:)-3vnzn",
                        "title" : "func capability<T>(T.Type) -> T?",
                        "type" : "method"
                      }
                    ],
                    "title" : "CapabilityCollection Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capabilitycollection\/capability(_:)-8so55",
                "title" : "func capability<T>(T.Type) -> T?",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capabilitycollection",
            "title" : "CapabilityCollection",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "children" : [
                      {
                        "path" : "\/documentation\/oktaidx\/idxcapability\/willproceed(to:)-6y67z",
                        "title" : "func willProceed(to: Remediation)",
                        "type" : "method"
                      }
                    ],
                    "title" : "IDXCapability Implementations",
                    "type" : "groupMarker"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/idxcapability\/willproceed(to:)-6dgot",
                "title" : "func willProceed(to: Remediation)",
                "type" : "method"
              }
            ],
            "path" : "\/documentation\/oktaidx\/idxcapability",
            "title" : "IDXCapability",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/oktaidx\/authenticatorcapability",
            "title" : "AuthenticatorCapability",
            "type" : "protocol"
          },
          {
            "path" : "\/documentation\/oktaidx\/remediationcapability",
            "title" : "RemediationCapability",
            "type" : "protocol"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/numberchallenge\/correctanswer",
                "title" : "let correctAnswer: String",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/numberchallenge\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/numberchallenge\/idxcapability-implementations",
                "title" : "IDXCapability Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capability\/numberchallenge",
            "title" : "Capability.NumberChallenge",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/passwordsettings\/daystoexpiry",
                "title" : "let daysToExpiry: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/passwordsettings\/excludeattributes",
                "title" : "let excludeAttributes: [String]",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/passwordsettings\/excludeusername",
                "title" : "let excludeUsername: Bool",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/passwordsettings\/minlength",
                "title" : "let minLength: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/passwordsettings\/minlowercase",
                "title" : "let minLowerCase: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/passwordsettings\/minnumber",
                "title" : "let minNumber: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/passwordsettings\/minsymbol",
                "title" : "let minSymbol: Int",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/passwordsettings\/minuppercase",
                "title" : "let minUpperCase: Int",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/passwordsettings\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/passwordsettings\/idxcapability-implementations",
                "title" : "IDXCapability Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capability\/passwordsettings",
            "title" : "Capability.PasswordSettings",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/pollable\/ispolling",
                "title" : "var isPolling: Bool",
                "type" : "property"
              },
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/pollable\/startpolling()",
                "title" : "func startPolling() async throws -> Response",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/pollable\/startpolling(completion:)",
                "title" : "func startPolling(completion: InteractionCodeFlow.ResponseResult?)",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/pollable\/stoppolling()",
                "title" : "func stopPolling()",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/pollable\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/pollable\/idxcapability-implementations",
                "title" : "IDXCapability Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capability\/pollable",
            "title" : "Capability.Pollable",
            "type" : "class"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/profile\/values",
                "title" : "let values: [String : String]",
                "type" : "property"
              },
              {
                "title" : "Subscripts",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/profile\/subscript(_:)",
                "title" : "subscript(String) -> String?",
                "type" : "subscript"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/profile\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/profile\/idxcapability-implementations",
                "title" : "IDXCapability Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capability\/profile",
            "title" : "Capability.Profile",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/recoverable\/recover()",
                "title" : "func recover() async throws -> Response",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/recoverable\/recover(completion:)",
                "title" : "func recover(completion: InteractionCodeFlow.ResponseResult?)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/recoverable\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/recoverable\/idxcapability-implementations",
                "title" : "IDXCapability Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capability\/recoverable",
            "title" : "Capability.Recoverable",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/sendable\/send()",
                "title" : "func send() async throws -> Response",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/sendable\/send(completion:)",
                "title" : "func send(completion: InteractionCodeFlow.ResponseResult?)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/sendable\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/sendable\/idxcapability-implementations",
                "title" : "IDXCapability Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capability\/sendable",
            "title" : "Capability.Sendable",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Methods",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/resendable\/resend()",
                "title" : "func resend() async throws -> Response",
                "type" : "method"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/resendable\/resend(completion:)",
                "title" : "func resend(completion: InteractionCodeFlow.ResponseResult?)",
                "type" : "method"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/resendable\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/resendable\/idxcapability-implementations",
                "title" : "IDXCapability Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capability\/resendable",
            "title" : "Capability.Resendable",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/socialidp\/id",
                "title" : "let id: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/socialidp\/idpname",
                "title" : "let idpName: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/socialidp\/redirecturl",
                "title" : "let redirectUrl: URL",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.property",
                "title" : "let service: Service",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/agentlessiwa",
                    "title" : "case agentlessIwa",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/apple",
                    "title" : "case apple",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/facebook",
                    "title" : "case facebook",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/google",
                    "title" : "case google",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/iwa",
                    "title" : "case iwa",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/linkedin",
                    "title" : "case linkedin",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/microsoft",
                    "title" : "case microsoft",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/oidc",
                    "title" : "case oidc",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/oinsocial",
                    "title" : "case oinSocial",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/okta",
                    "title" : "case okta",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/other",
                    "title" : "case other",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/saml",
                    "title" : "case saml",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/x509",
                    "title" : "case x509",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/init(string:)",
                    "title" : "init(string: String)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/socialidp\/service-swift.enum",
                "title" : "Capability.SocialIDP.Service",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/socialidp\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/socialidp\/idxcapability-implementations",
                "title" : "IDXCapability Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capability\/socialidp",
            "title" : "Capability.SocialIDP",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/otp\/image",
                "title" : "var image: NSImage?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/otp\/imagedata",
                "title" : "let imageData: Data",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/otp\/mimetype",
                "title" : "let mimeType: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/capability\/otp\/sharedsecret",
                "title" : "let sharedSecret: String?",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/capability\/otp\/willproceed(to:)",
                    "title" : "func willProceed(to: Remediation)",
                    "type" : "method"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/capability\/otp\/idxcapability-implementations",
                "title" : "IDXCapability Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/capability\/otp",
            "title" : "Capability.OTP",
            "type" : "struct"
          },
          {
            "title" : "Errors",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/idxservererror\/errordescription-1oxw4",
                "title" : "var errorDescription: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/idxservererror\/localizationkey",
                "title" : "let localizationKey: String?",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/idxservererror\/message",
                "title" : "let message: String",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/oktaidx\/idxservererror\/severity",
                "title" : "let severity: Response.Message.Severity",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/idxservererror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/idxservererror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/idxservererror\/errordescription-82dux",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/idxservererror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/idxservererror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/idxservererror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/idxservererror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/idxservererror",
            "title" : "IDXServerError",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Enumeration Cases",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/apierror(_:)",
                "title" : "case apiError(APIClientError)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/cannotcreaterequest",
                "title" : "case cannotCreateRequest",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/internalerror(_:)",
                "title" : "case internalError(Error)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/internalmessage(_:)",
                "title" : "case internalMessage(String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/invalidcontext",
                "title" : "case invalidContext",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/invalidflow",
                "title" : "case invalidFlow",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/invalidhttpresponse",
                "title" : "case invalidHTTPResponse",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/invalidparameter(name:)",
                "title" : "case invalidParameter(name: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/invalidparametervalue(name:type:)",
                "title" : "case invalidParameterValue(name: String, type: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/invalidrequestdata",
                "title" : "case invalidRequestData",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/invalidresponsedata",
                "title" : "case invalidResponseData",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/invalidurl",
                "title" : "case invalidUrl",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/missingrefreshtoken",
                "title" : "case missingRefreshToken",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/missingrelatedobject",
                "title" : "case missingRelatedObject",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/missingremediationoption(name:)",
                "title" : "case missingRemediationOption(name: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/missingrequiredparameter(name:)",
                "title" : "case missingRequiredParameter(name: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/oautherror(summary:code:errorid:)",
                "title" : "case oauthError(summary: String, code: String?, errorId: String?)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/parameterimmutable(name:)",
                "title" : "case parameterImmutable(name: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/platformunsupported",
                "title" : "case platformUnsupported",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/servererror(message:localizationkey:type:)",
                "title" : "case serverError(message: String, localizationKey: String, type: String)",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/successresponsemissing",
                "title" : "case successResponseMissing",
                "type" : "case"
              },
              {
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/unknownremediationoption(name:)",
                "title" : "case unknownRemediationOption(name: String)",
                "type" : "case"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/==(_:_:)",
                    "title" : "static func == (InteractionCodeFlowError, InteractionCodeFlowError) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/localizeddescription",
                    "title" : "var localizedDescription: String",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/error-implementations",
                "title" : "Error Implementations",
                "type" : "symbol"
              },
              {
                "children" : [
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/errordescription-1d6kr",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/errordescription-4luqr",
                    "title" : "var errorDescription: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/failurereason",
                    "title" : "var failureReason: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/helpanchor",
                    "title" : "var helpAnchor: String?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/recoverysuggestion",
                    "title" : "var recoverySuggestion: String?",
                    "type" : "property"
                  }
                ],
                "path" : "\/documentation\/oktaidx\/interactioncodeflowerror\/localizederror-implementations",
                "title" : "LocalizedError Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/oktaidx\/interactioncodeflowerror",
            "title" : "InteractionCodeFlowError",
            "type" : "enum"
          },
          {
            "title" : "Variables",
            "type" : "groupMarker"
          },
          {
            "path" : "\/documentation\/oktaidx\/version-10mzp",
            "title" : "let Version: SDKVersion",
            "type" : "var"
          }
        ],
        "path" : "\/documentation\/oktaidx",
        "title" : "OktaIdx",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 0
  }
}